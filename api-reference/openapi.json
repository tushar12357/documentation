{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.closerx.ai/api"
    }
    ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login/":{
     "post": {
        "description": "Allows User to Log In the system",
        "security":[],
        "requestBody": {
          "description": "Login Credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request-email/":{
     "post": {
        "description": "Allows User to Log In the system",
        "security":[],
        "requestBody": {
          "description": "Login Credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout/": {
      "post": {
        "description": "Allows User to Log Out of the system",
        "requestBody": {
          "description": "Access token for logout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Logout response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password-reset/{uidb64}/{token}/": {
      "get": {
        "description": "Verifies the password reset token for a user",
        "security": [],
        "parameters": [
          {
            "name": "uidb64",
            "in": "path",
            "description": "Base64 encoded user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Password reset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token verification response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetVerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password-reset-complete/": {
      "post": {
        "description": "Allows User to reset their password using a valid token",
        "security": [],
        "requestBody": {
          "description": "User ID, token, and new password for password reset",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetCompleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetCompleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/token/refresh/": {
      "post": {
        "description": "Allows User to refresh their access token",
        "security": [],
        "requestBody": {
          "description": "Refresh token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token refresh response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dashboard_top_cards_data_v2/": {
      "get": {
        "description": "Returns the call success rate,average response time,ai accurary rate and total balance",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dashboard_campaign_list/": {
      "get": {
        "description": "Returns the campaign distribution",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardCampaignList"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dashboard_data_v2/": {
      "get": {
        "description": "Returns the call success rate,average response time,ai accurary rate and total balance",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardMonthlyData"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaign-results/": {
      "get": {
        "description": "Returns the campaign distribution",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardCampaignResult"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/quick-campaign-results/": {
      "get": {
        "description": "Returns the campaign distribution",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardQuickCampaignResult"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/update-whitelabel/": {
      "get": {
        "description": "Retrieves the whitelabel domain configuration for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelabel domain configuration response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the whitelabel domain configuration for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Whitelabel configuration data to update",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WhitelabelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Whitelabel domain update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/verify-whitelabel/": {
      "post": {
        "description": "Verifies the whitelabel domain configuration for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Domain and verification step for whitelabel verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyWhitelabelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Whitelabel domain verification response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyWhitelabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/change/agency/credit_price/": {
      "get": {
        "description": "Retrieves the credit price for the agency",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credit price response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditPriceResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Updates the credit price for the agency",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Credit price to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditPriceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credit price update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditPriceResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/create-stripe-product/": {
      "post": {
        "description": "Creates a new Stripe product and associated price",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product details for creating a Stripe product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripeProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stripe product creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStripeProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/list-stripe-products/": {
      "get": {
        "description": "Retrieves a list of Stripe products and their associated prices",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stripe products list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStripeProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/create-subscription-link/": {
      "post": {
        "description": "Creates a Stripe payment link for a subscription",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Price ID for creating the subscription payment link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscription payment link creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionLinkResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/delete-stripe-products/{product_id}/": {
      "delete": {
        "description": "Hides or deactivates a Stripe product",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "Unique identifier for the Stripe product to be hidden",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stripe product hide response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteStripeProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/your-credit-plans/": {
      "get": {
        "description": "Retrieves a list of available credit plans for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credit plans list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditPlansResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new credit plan for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details for creating a new credit plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditPlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credit plan creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditPlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/your-credit-plans/{id}/": {
      "delete": {
        "description": "Deletes a specific credit plan by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the credit plan to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Credit plan deleted successfully, no content returned"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/purchased-themes/": {
      "get": {
        "description": "Retrieves a list of purchased themes for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchased themes list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchasedThemesResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/create-checkout-session-theme/": {
      "post": {
        "description": "Creates a Stripe checkout session for purchasing a theme",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout session creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckoutSessionThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }                              
  },
  "components": {
    "schemas": {
       "Login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password"
          }
        }
      },
       "LoginResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the login was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the login request"
          },
          "data": {
            "type": "object",
            "required": ["user"],
            "properties": {
              "user": {
                "type": "object",
                "required": [
                  "id",
                  "email",
                  "first_name",
                  "last_name",
                  "profile_picture",
                  "contact_number",
                  "email_verified",
                  "companies",
                  "access_token",
                  "refresh_token",
                  "is_superadmin",
                  "agent_exists",
                  "subscription_status",
                  "is_suspended",
                  "ghl_connected",
                  "term_condition_excepted",
                  "twilio_type",
                  "salesforce_connected",
                  "snowie_connected",
                  "telnyx_connected",
                  "spreadsheet_connected",
                  "login_domain"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "User's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User's last name"
                  },
                  "profile_picture": {
                    "type": "string",
                    "description": "URL to the user's profile picture"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "User's contact phone number"
                  },
                  "email_verified": {
                    "type": "boolean",
                    "description": "Indicates if the user's email is verified"
                  },
                  "companies": {
                    "type": "object",
                    "required": ["user_type", "company_id", "company_name", "company_name_view"],
                    "properties": {
                      "user_type": {
                        "type": "string",
                        "description": "Type of user within the company"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Unique identifier for the company"
                      },
                      "company_name": {
                        "type": "string",
                        "description": "Name of the company"
                      },
                      "company_name_view": {
                        "type": "string",
                        "description": "Display name of the company"
                      }
                    }
                  },
                  "access_token": {
                    "type": "string",
                    "description": "Access token for authentication"
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "Refresh token for renewing access"
                  },
                  "is_superadmin": {
                    "type": "boolean",
                    "description": "Indicates if the user is a superadmin"
                  },
                  "agent_exists": {
                    "type": "boolean",
                    "description": "Indicates if an agent exists for the user"
                  },
                  "subscription_status": {
                    "type": "string",
                    "description": "Status of the user's subscription"
                  },
                  "is_suspended": {
                    "type": "boolean",
                    "description": "Indicates if the user's account is suspended"
                  },
                  "ghl_connected": {
                    "type": "boolean",
                    "description": "Indicates if GoHighLevel is connected"
                  },
                  "term_condition_excepted": {
                    "type": "boolean",
                    "description": "Indicates if terms and conditions are accepted"
                  },
                  "twilio_type": {
                    "type": "string",
                    "description": "Type of Twilio integration"
                  },
                  "salesforce_connected": {
                    "type": "boolean",
                    "description": "Indicates if Salesforce is connected"
                  },
                  "snowie_connected": {
                    "type": "boolean",
                    "description": "Indicates if Snowie is connected"
                  },
                  "telnyx_connected": {
                    "type": "boolean",
                    "description": "Indicates if Telnyx is connected"
                  },
                  "spreadsheet_connected": {
                    "type": "boolean",
                    "description": "Indicates if spreadsheet integration is connected"
                  },
                  "login_domain": {
                    "type": "string",
                    "description": "Domain used for login"
                  }
                }
              }
            }
          }
        }
      },
       "ForgotPassword": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          }
        }
      },
        "ForgotPasswordResponse": {
        "type": "object",
        "required": ["success", "status_code", "data", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response"
          },
          "data": {
            "type": "object",
            "required": ["email"],
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["access_token"],
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access token for authentication"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the logout was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the logout request"
          },
          "data": {
            "type": "object",
            "description": "Empty object containing no additional data"
          }
        }
      },
       "PasswordResetVerifyResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the token verification was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the token verification"
          },
          "data": {
            "type": "object",
            "description": "Empty object containing no additional data"
          }
        }
      },
      "PasswordResetCompleteRequest": {
        "type": "object",
        "required": ["uidb64", "token", "password"],
        "properties": {
          "uidb64": {
            "type": "string",
            "description": "Base64 encoded user ID"
          },
          "token": {
            "type": "string",
            "description": "Password reset token"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "New password for the user"
          }
        }
      },
      "PasswordResetCompleteResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the password reset was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the password reset request"
          },
          "data": {
            "type": "object",
            "description": "Empty object containing no additional data"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["refresh"],
        "properties": {
          "refresh": {
            "type": "string",
            "description": "Refresh token for obtaining a new access token"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "required": ["access"],
        "properties": {
          "access": {
            "type": "string",
            "description": "New access token"
          }
        }
      },
      "DashboardData": {
        "type": "object",
        "required": [
          "total_outbound_calls",
          "success_rate",
          "call_duration",
          "success_rate_breakdown",
          "ai_accuracy_rate"
        ],
        "properties": {
          "total_outbound_calls": {
            "type": "integer",
            "description": "Total number of outbound calls"
          },
          "success_rate": {
            "type": "number",
            "format": "float",
            "description": "Overall success rate percentage"
          },
          "call_duration": {
            "type": "object",
            "required": [
              "overall",
              "daily",
              "weekly",
              "monthly",
              "rate_of_change_call_duration"
            ],
            "properties": {
              "overall": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration overall"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration overall"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration overall"
                  }
                }
              },
              "daily": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration for the day"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration for the day"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration for the day"
                  }
                }
              },
              "weekly": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration for the week"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration for the week"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration for the week"
                  }
                }
              },
              "monthly": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration for the month"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration for the month"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration for the month"
                  }
                }
              },
              "rate_of_change_call_duration": {
                "type": "number",
                "format": "float",
                "description": "Rate of change in call duration"
              }
            }
          },
          "success_rate_breakdown": {
            "type": "object",
            "required": [
              "daily",
              "weekly",
              "monthly",
              "rate_of_change_success_rate"
            ],
            "properties": {
              "daily": {
                "type": "number",
                "format": "float",
                "description": "Daily success rate percentage"
              },
              "weekly": {
                "type": "number",
                "format": "float",
                "description": "Weekly success rate percentage"
              },
              "monthly": {
                "type": "number",
                "format": "float",
                "description": "Monthly success rate percentage"
              },
              "rate_of_change_success_rate": {
                "type": "number",
                "format": "float",
                "description": "Rate of change in success rate"
              }
            }
          },
          "ai_accuracy_rate": {
            "type": "object",
            "required": [
              "ai_accuracy",
              "total_sentiment",
              "transcription_rate",
              "rate_of_change_ai_accuracy_rate"
            ],
            "properties": {
              "ai_accuracy": {
                "type": "number",
                "format": "float",
                "description": "AI accuracy percentage"
              },
              "total_sentiment": {
                "type": "number",
                "format": "float",
                "description": "Total sentiment score"
              },
              "transcription_rate": {
                "type": "number",
                "format": "float",
                "description": "Transcription accuracy rate"
              },
              "rate_of_change_ai_accuracy_rate": {
                "type": "number",
                "format": "float",
                "description": "Rate of change in AI accuracy rate"
              }
            }
          }
        }
      },
      "DashboardCampaignList": {
  "type": "object",
  "required": ["response", "data"],
  "properties": {
    "response": {
      "type": "string",
      "description": "Status of the response",
      "enum": ["success"]
    },
    "data": {
      "type": "object",
      "required": ["inbound_campaigns", "outbound_campaigns", "quick_campaigns"],
      "properties": {
        "inbound_campaigns": {
          "type": "integer",
          "description": "Number of inbound campaigns"
        },
        "outbound_campaigns": {
          "type": "integer",
          "description": "Number of outbound campaigns"
        },
        "quick_campaigns": {
          "type": "integer",
          "description": "Number of quick campaigns"
        }
      }
    }
  }
      },
        "DashboardMonthlyData": {
        "type": "object",
        "required": [
          "success",
          "message",
          "total_cost",
          "total_call_duration",
          "completed_calls_percentage",
          "other_call_percentage",
          "monthly_data"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the data fetch was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          },
          "total_cost": {
            "type": "number",
            "format": "float",
            "description": "Total cost of the calls"
          },
          "total_call_duration": {
            "type": "integer",
            "description": "Total duration of all calls in seconds"
          },
          "completed_calls_percentage": {
            "type": "number",
            "format": "float",
            "description": "Percentage of calls that were completed"
          },
          "other_call_percentage": {
            "type": "number",
            "format": "float",
            "description": "Percentage of other (non-completed) calls"
          },
          "monthly_data": {
            "type": "array",
            "description": "Array of monthly data metrics",
            "items": {
              "type": "object",
              "required": ["name", "data"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the metric (e.g., Total Calls)"
                },
                "data": {
                  "type": "array",
                  "description": "Array of integer values representing the metric data for each month",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
         "DashboardCampaignResult": {
        "type": "object",
        "required": [
          "count",
          "next",
          "previous",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of campaign results"
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "URL to the next page of results"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "URL to the previous page of results"
          },
          "results": {
            "type": "array",
            "description": "Array of campaign result objects",
            "items": {
              "type": "object",
              "required": [
                "id",
                "sid",
                "full_name",
                "contact_number",
                "call_duration",
                "status",
                "appointment_booked",
                "outcome",
                "contact_id",
                "direction",
                "recording_url",
                "transcription",
                "transcription_text",
                "notes",
                "improvement_tags",
                "credit_deduction",
                "errors",
                "calender_id",
                "response_sentiment",
                "created_at",
                "updated_at",
                "campaign"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the campaign result"
                },
                "sid": {
                  "type": "string",
                  "nullable": true,
                  "description": "Session ID"
                },
                "full_name": {
                  "type": "string",
                  "description": "Full name of the contact"
                },
                "contact_number": {
                  "type": "string",
                  "description": "Contact phone number"
                },
                "call_duration": {
                  "type": "integer",
                  "description": "Duration of the call in seconds"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the call"
                },
                "appointment_booked": {
                  "type": "boolean",
                  "description": "Indicates if an appointment was booked"
                },
                "outcome": {
                  "type": "string",
                  "description": "Outcome of the campaign"
                },
                "contact_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the contact"
                },
                "direction": {
                  "type": "string",
                  "description": "Direction of the call (inbound/outbound)"
                },
                "recording_url": {
                  "type": "string",
                  "nullable": true,
                  "description": "URL to the call recording"
                },
                "transcription": {
                  "type": "array",
                  "description": "Array of transcription data",
                  "items": {
                    "type": "string"
                  }
                },
                "transcription_text": {
                  "type": "string",
                  "description": "Full transcription text"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes for the campaign"
                },
                "improvement_tags": {
                  "type": "array",
                  "description": "Array of tags for improvement",
                  "items": {
                    "type": "string"
                  }
                },
                "credit_deduction": {
                  "type": "string",
                  "description": "Credit deduction details"
                },
                "errors": {
                  "type": "string",
                  "description": "Any errors encountered"
                },
                "calender_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Calendar ID associated with the call"
                },
                "response_sentiment": {
                  "type": "string",
                  "description": "Sentiment of the response"
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp when the result was created"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Timestamp when the result was last updated"
                },
                "campaign": {
                  "type": "string",
                  "description": "Name or ID of the campaign"
                }
              }
            }
          }
        }
      },
      "DashboardQuickCampaignResult": {
        "type": "object",
        "required": [
          "count",
          "next",
          "previous",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of quick campaign results"
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "URL to the next page of results"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "URL to the previous page of results"
          },
          "results": {
            "type": "array",
            "description": "Array of quick campaign result objects",
            "items": {
              "type": "object",
              "required": [
                "id",
                "sid",
                "contact_id",
                "contact_number",
                "email",
                "first_name",
                "last_name",
                "company_name",
                "industry",
                "address",
                "custom1",
                "custom2",
                "custom3",
                "custom4",
                "scheduling_charge",
                "calender_id",
                "appointment_booked",
                "call_duration",
                "status",
                "improvement_tags",
                "outcome",
                "recording_url",
                "transcription",
                "transcription_text",
                "notes",
                "credit_deduction",
                "errors",
                "response_sentiment",
                "triggered_by_crm",
                "created_at",
                "updated_at",
                "quick_campaign"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the quick campaign result"
                },
                "sid": {
                  "type": "string",
                  "nullable": true,
                  "description": "Session ID"
                },
                "contact_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the contact"
                },
                "contact_number": {
                  "type": "string",
                  "description": "Contact phone number"
                },
                "email": {
                  "type": "string",
                  "nullable": true,
                  "description": "Email address of the contact"
                },
                "first_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "First name of the contact"
                },
                "last_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Last name of the contact"
                },
                "company_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Name of the company"
                },
                "industry": {
                  "type": "string",
                  "nullable": true,
                  "description": "Industry of the contact"
                },
                "address": {
                  "type": "string",
                  "nullable": true,
                  "description": "Address of the contact"
                },
                "custom1": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 1"
                },
                "custom2": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 2"
                },
                "custom3": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 3"
                },
                "custom4": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 4"
                },
                "scheduling_charge": {
                  "type": "string",
                  "description": "Scheduling charge for the call"
                },
                "calender_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Calendar ID associated with the call"
                },
                "appointment_booked": {
                  "type": "boolean",
                  "description": "Indicates if an appointment was booked"
                },
                "call_duration": {
                  "type": "integer",
                  "description": "Duration of the call in seconds"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the call"
                },
                "improvement_tags": {
                  "type": "array",
                  "description": "Array of tags for improvement",
                  "items": {
                    "type": "string"
                  }
                },
                "outcome": {
                  "type": "string",
                  "description": "Outcome of the campaign"
                },
                "recording_url": {
                  "type": "string",
                  "nullable": true,
                  "description": "URL to the call recording"
                },
                "transcription": {
                  "type": "array",
                  "description": "Array of transcription data",
                  "items": {
                    "type": "string"
                  }
                },
                "transcription_text": {
                  "type": "string",
                  "description": "Full transcription text"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes for the campaign"
                },
                "credit_deduction": {
                  "type": "string",
                  "description": "Credit deduction details"
                },
                "errors": {
                  "type": "string",
                  "description": "Any errors encountered"
                },
                "response_sentiment": {
                  "type": "string",
                  "description": "Sentiment of the response"
                },
                "triggered_by_crm": {
                  "type": "string",
                  "description": "CRM system that triggered the campaign"
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp when the result was created"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Timestamp when the result was last updated"
                },
                "quick_campaign": {
                  "type": "string",
                  "description": "Identifier for the quick campaign"
                }
              }
            }
          }
        }
      },
       "WhitelabelRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain name for the whitelabel"
          },
          "legal_name": {
            "type": "string",
            "description": "Legal name of the entity"
          },
          "address": {
            "type": "string",
            "description": "Address associated with the entity"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Contact email address"
          },
          "reselling_price": {
            "type": "string",
            "description": "Price for reselling"
          },
          
          "btn_color": {
            "type": "string",
            "description": "Color for buttons in hex format"
          },
          "btn_hover_color": {
            "type": "string",
            "description": "Hover color for buttons in hex format"
          },
          "btn_text_color": {
            "type": "string",
            "description": "Text color for buttons in hex format"
          },
          "background_color_primary": {
            "type": "string",
            "description": "Primary background color in hex format"
          },
          "background_color_secondary": {
            "type": "string",
            "description": "Secondary background color in hex format"
          },
          "select_text_color": {
            "type": "string",
            "description": "Text color for select elements in hex format"
          },
          "text_color": {
            "type": "string",
            "description": "General text color in hex format"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "description": "URL to the logo image"
          },
          "fav_icon": {
            "type": "string",
            "format": "uri",
            "description": "URL to the favicon image"
          },
          "icon_color": {
            "type": "string",
            "description": "Color for icons in hex format"
          },
          "icon_background_color": {
            "type": "string",
            "description": "Background color for icons in hex format"
          },
          "hide_video": {
            "type": "boolean",
            "description": "Indicates if video content should be hidden"
          },
          
          "email_template_subject": {
            "type": "string",
            "description": "Subject line for email templates"
          },
          "email_template": {
            "type": "string",
            "description": "Content of the email template"
          },
          "coustum_css": {
            "type": "string",
            "description": "Custom CSS for the whitelabel"
          },
          "coustum_js": {
            "type": "string",
            "description": "Custom JavaScript for the whitelabel"
          },
          "loginpage_theme_name": {
            "type": "string",
            "description": "Name of the theme for the login page"
          },
          "text_hover_color": {
            "type": "string",
            "nullable": true,
            "description": "Text hover color in hex format"
          },
          "logo_background_color": {
            "type": "string",
            "nullable": true,
            "description": "Background color for the logo in hex format"
          },
          "layout_border_color": {
            "type": "string",
            "nullable": true,
            "description": "Border color for the layout in hex format"
          },
          "button_border_color": {
            "type": "string",
            "nullable": true,
            "description": "Border color for buttons in hex format"
          },
          "text_color_light": {
            "type": "string",
            "nullable": true,
            "description": "Light text color in hex format"
          },
          "sidebar_tab_hover_color": {
            "type": "string",
            "nullable": true,
            "description": "Hover color for sidebar tabs in hex format"
          }
        }
      },
      "WhitelabelResponse": {
        "type": "object",
        "required": ["success", "status_code", "data", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response"
          },
          "data": {
            "type": "object",
            "required": [
              "id",
              "domain",
              "is_primary",
              "activate",
              "legal_name",
              "address",
              "email",
              "subsription_type",
              "subsription_id",
              "reselling_price",
              "stripe_key",
              "btn_color",
              "btn_hover_color",
              "btn_text_color",
              "background_color_primary",
              "background_color_secondary",
              "select_text_color",
              "text_color",
              "logo",
              "fav_icon",
              "icon_color",
              "icon_background_color",
              "hide_video",
              "sendgrid_token",
              "sendgrid_email",
              "sendgrid_domain_id",
              "domain_verified",
              "email_template_subject",
              "email_template",
              "coustum_css",
              "coustum_js",
              "loginpage_theme_name",
              "strip_account_id",
              "created_at",
              "updated_at",
              "tenant"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the whitelabel domain"
              },
              "domain": {
                "type": "string",
                "description": "Domain name for the whitelabel"
              },
              "is_primary": {
                "type": "boolean",
                "description": "Indicates if this is the primary domain"
              },
              "activate": {
                "type": "boolean",
                "description": "Indicates if the domain is active"
              },
              "legal_name": {
                "type": "string",
                "description": "Legal name of the entity"
              },
              "address": {
                "type": "string",
                "description": "Address associated with the entity"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Contact email address"
              },
              "subsription_type": {
                "type": "string",
                "description": "Type of subscription"
              },
              "subsription_id": {
                "type": "string",
                "description": "Unique identifier for the subscription"
              },
              "reselling_price": {
                "type": "string",
                "description": "Price for reselling"
              },
              "stripe_key": {
                "type": "string",
                "description": "Stripe API key for payments"
              },
              "btn_color": {
                "type": "string",
                "description": "Color for buttons in hex format"
              },
              "btn_hover_color": {
                "type": "string",
                "description": "Hover color for buttons in hex format"
              },
              "btn_text_color": {
                "type": "string",
                "description": "Text color for buttons in hex format"
              },
              "background_color_primary": {
                "type": "string",
                "description": "Primary background color in hex format"
              },
              "background_color_secondary": {
                "type": "string",
                "description": "Secondary background color in hex format"
              },
              "select_text_color": {
                "type": "string",
                "description": "Text color for select elements in hex format"
              },
              "text_color": {
                "type": "string",
                "description": "General text color in hex format"
              },
              "logo": {
                "type": "string",
                "format": "uri",
                "description": "URL to the logo image"
              },
              "fav_icon": {
                "type": "string",
                "format": "uri",
                "description": "URL to the favicon image"
              },
              "icon_color": {
                "type": "string",
                "description": "Color for icons in hex format"
              },
              "icon_background_color": {
                "type": "string",
                "description": "Background color for icons in hex format"
              },
              "hide_video": {
                "type": "boolean",
                "description": "Indicates if video content should be hidden"
              },
              "sendgrid_token": {
                "type": "string",
                "nullable": true,
                "description": "SendGrid API token"
              },
              "sendgrid_email": {
                "type": "string",
                "format": "email",
                "description": "SendGrid email address"
              },
              "sendgrid_domain_id": {
                "type": "string",
                "description": "SendGrid domain ID"
              },
              "domain_verified": {
                "type": "boolean",
                "description": "Indicates if the domain is verified"
              },
              "email_template_subject": {
                "type": "string",
                "description": "Subject line for email templates"
              },
              "email_template": {
                "type": "string",
                "description": "Content of the email template"
              },
              "coustum_css": {
                "type": "string",
                "description": "Custom CSS for the whitelabel"
              },
              "coustum_js": {
                "type": "string",
                "description": "Custom JavaScript for the whitelabel"
              },
              "loginpage_theme_name": {
                "type": "string",
                "description": "Name of the theme for the login page"
              },
              "strip_account_id": {
                "type": "string",
                "description": "Stripe account ID"
              },
              "text_hover_color": {
                "type": "string",
                "nullable": true,
                "description": "Text hover color in hex format"
              },
              "logo_background_color": {
                "type": "string",
                "nullable": true,
                "description": "Background color for the logo in hex format"
              },
              "layout_border_color": {
                "type": "string",
                "nullable": true,
                "description": "Border color for the layout in hex format"
              },
              "button_border_color": {
                "type": "string",
                "nullable": true,
                "description": "Border color for buttons in hex format"
              },
              "text_color_light": {
                "type": "string",
                "nullable": true,
                "description": "Light text color in hex format"
              },
              "sidebar_tab_hover_color": {
                "type": "string",
                "nullable": true,
                "description": "Hover color for sidebar tabs in hex format"
              },
              "razorpay_account_status": {
                "type": "string",
                "nullable": true,
                "description": "Status of the Razorpay account"
              },
              "razorpay_product_config_id": {
                "type": "string",
                "nullable": true,
                "description": "Razorpay product configuration ID"
              },
              "razorpay_account_id": {
                "type": "string",
                "nullable": true,
                "description": "Razorpay account ID"
              },
              "business_type": {
                "type": "string",
                "nullable": true,
                "description": "Type of business"
              },
              "business_category": {
                "type": "string",
                "nullable": true,
                "description": "Category of the business"
              },
              "business_subcategory": {
                "type": "string",
                "nullable": true,
                "description": "Subcategory of the business"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the whitelabel domain was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the whitelabel domain was last updated"
              },
              "tenant": {
                "type": "integer",
                "description": "Unique identifier for the tenant"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "VerifyWhitelabelRequest": {
        "type": "object",
        "required": ["domain", "step"],
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain name for the whitelabel"
          },
          "step": {
            "type": "string",
            "description": "Verification step (e.g., email)"
          }
        }
      },
      "VerifyWhitelabelResponse": {
        "type": "object",
        "required": ["success", "status_code", "data", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the verification was successful"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response"
          },
          "data": {
            "type": "object",
            "required": ["verified", "ip"],
            "properties": {
              "verified": {
                "type": "boolean",
                "description": "Indicates if the domain is verified"
              },
              "ip": {
                "type": "string",
                "description": "IP address associated with the domain"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the verification"
          }
        }
      },
      "CreditPriceRequest": {
        "type": "object",
        "required": ["credit_price"],
        "properties": {
          "credit_price": {
            "type": "number",
            "format": "float",
            "description": "The credit price for the agency"
          }
        }
      },
      "CreditPriceResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["credit_price"],
            "properties": {
              "credit_price": {
                "type": "number",
                "format": "float",
                "description": "The credit price for the agency"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
       "CreateStripeProductRequest": {
        "type": "object",
        "required": ["product_name", "unit_amount", "currency", "product_description"],
        "properties": {
          "product_name": {
            "type": "string",
            "description": "Name of the Stripe product"
          },
          "unit_amount": {
            "type": "integer",
            "description": "Price amount in the smallest currency unit (e.g., cents for USD)"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the price (e.g., usd)"
          },
          "product_description": {
            "type": "string",
            "description": "Description of the Stripe product"
          }
        }
      },
      "CreateStripeProductResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["product_id", "product_name", "product_description", "price_id", "prices_amount", "prices_currency"],
            "properties": {
              "product_id": {
                "type": "string",
                "description": "Unique identifier for the created Stripe product"
              },
              "product_name": {
                "type": "string",
                "description": "Name of the created Stripe product"
              },
              "product_description": {
                "type": "string",
                "description": "Description of the created Stripe product"
              },
              "price_id": {
                "type": "string",
                "description": "Unique identifier for the created price"
              },
              "prices_amount": {
                "type": "integer",
                "description": "Price amount in the smallest currency unit"
              },
              "prices_currency": {
                "type": "string",
                "description": "Currency code for the price"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
       "ListStripeProductsResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["product_prices"],
            "properties": {
              "product_prices": {
                "type": "array",
                "description": "List of Stripe products and their prices",
                "items": {
                  "type": "object",
                  "required": ["product_id", "product_name", "product_description", "prices_id", "prices_amount", "prices_currency"],
                  "properties": {
                    "product_id": {
                      "type": "string",
                      "description": "Unique identifier for the Stripe product"
                    },
                    "product_name": {
                      "type": "string",
                      "description": "Name of the Stripe product"
                    },
                    "product_description": {
                      "type": "string",
                      "description": "Description of the Stripe product"
                    },
                    "prices_id": {
                      "type": "string",
                      "description": "Unique identifier for the price"
                    },
                    "prices_amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Price amount in the smallest currency unit"
                    },
                    "prices_currency": {
                      "type": "string",
                      "description": "Currency code for the price"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "CreateSubscriptionLinkRequest": {
        "type": "object",
        "required": ["price_id"],
        "properties": {
          "price_id": {
            "type": "string",
            "description": "Unique identifier for the Stripe price"
          }
        }
      },
      "CreateSubscriptionLinkResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["payment_link"],
            "properties": {
              "payment_link": {
                "type": "string",
                "format": "uri",
                "description": "URL for the Stripe payment link"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
       "DeleteStripeProductResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "description": "Empty object containing no additional data"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "CreditPlansResponse": {
        "type": "array",
        "description": "List of available credit plans",
        "items": {
          "type": "object",
          "required": ["id", "name", "description", "amount", "credits", "currency", "discount", "features", "created_at", "updated_at"],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for the credit plan"
            },
            "name": {
              "type": "string",
              "description": "Name of the credit plan"
            },
            "description": {
              "type": "string",
              "description": "Description of the credit plan"
            },
            "amount": {
              "type": "string",
              "description": "Price of the credit plan"
            },
            "credits": {
              "type": "string",
              "description": "Number of credits included in the plan"
            },
            "currency": {
              "type": "string",
              "description": "Currency code for the price (e.g., usd)"
            },
            "discount": {
              "type": "integer",
              "description": "Discount percentage for the plan"
            },
            "features": {
              "type": "object",
              "description": "Features included in the credit plan",
              "additionalProperties": {
                "type": "string",
                "description": "Description of a specific feature"
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the credit plan was created"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the credit plan was last updated"
            }
          }
        }
      },
      "CreateCreditPlanRequest": {
        "type": "object",
        "required": ["name", "description", "amount", "credits", "currency", "discount", "features"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the credit plan"
          },
          "description": {
            "type": "string",
            "description": "Description of the credit plan"
          },
          "amount": {
            "type": "integer",
            "description": "Price of the credit plan"
          },
          "credits": {
            "type": "integer",
            "description": "Number of credits included in the plan"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the price (e.g., usd)"
          },
          "discount": {
            "type": "integer",
            "description": "Discount percentage for the plan"
          },
          "features": {
            "type": "object",
            "description": "Features included in the credit plan",
            "additionalProperties": {
              "type": "string",
              "description": "Description of a specific feature"
            }
          }
        }
      },
      "CreateCreditPlanResponse": {
        "type": "object",
        "required": ["id", "name", "description", "amount", "credits", "currency", "discount", "features", "created_at", "updated_at"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the credit plan"
          },
          "name": {
            "type": "string",
            "description": "Name of the credit plan"
          },
          "description": {
            "type": "string",
            "description": "Description of the credit plan"
          },
          "amount": {
            "type": "string",
            "description": "Price of the credit plan"
          },
          "credits": {
            "type": "string",
            "description": "Number of credits included in the plan"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the price (e.g., usd)"
          },
          "discount": {
            "type": "integer",
            "description": "Discount percentage for the plan"
          },
          "features": {
            "type": "object",
            "description": "Features included in the credit plan",
            "additionalProperties": {
              "type": "string",
              "description": "Description of a specific feature"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the credit plan was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the credit plan was last updated"
          }
        }
      },
      "PurchasedThemesResponse": {
        "type": "array",
        "description": "List of purchased themes",
        "items": {
          "type": "object",
          "required": ["id", "name", "slug", "description", "preview_url"],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for the theme"
            },
            "name": {
              "type": "string",
              "description": "Name of the theme"
            },
            "slug": {
              "type": "string",
              "description": "Slug identifier for the theme"
            },
            "description": {
              "type": "string",
              "description": "Description of the theme"
            },
            "preview_url": {
              "type": "string",
              "format": "uri",
              "description": "URL to preview the theme"
            }
          }
        }
      },
      "CreateCheckoutSessionThemeResponse": {
        "type": "object",
        "required": ["checkout_url"],
        "properties": {
          "checkout_url": {
            "type": "string",
            "format": "uri",
            "description": "URL for the Stripe checkout session"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}