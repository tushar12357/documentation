{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.closerx.ai/api"
    }
    ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login/":{
     "post": {
        "description": "Allows User to Log In the system",
        "security":[],
        "requestBody": {
          "description": "Login Credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request-email/":{
     "post": {
        "description": "Allows User to Log In the system",
        "security":[],
        "requestBody": {
          "description": "Login Credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout/": {
      "post": {
        "description": "Allows User to Log Out of the system",
        "requestBody": {
          "description": "Access token for logout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Logout response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password-reset/{uidb64}/{token}/": {
      "get": {
        "description": "Verifies the password reset token for a user",
        "security": [],
        "parameters": [
          {
            "name": "uidb64",
            "in": "path",
            "description": "Base64 encoded user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Password reset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token verification response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetVerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password-reset-complete/": {
      "post": {
        "description": "Allows User to reset their password using a valid token",
        "security": [],
        "requestBody": {
          "description": "User ID, token, and new password for password reset",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetCompleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetCompleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/token/refresh/": {
      "post": {
        "description": "Allows User to refresh their access token",
        "security": [],
        "requestBody": {
          "description": "Refresh token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token refresh response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dashboard_top_cards_data_v2/": {
      "get": {
        "description": "Returns the call success rate,average response time,ai accurary rate and total balance",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dashboard_campaign_list/": {
      "get": {
        "description": "Returns the campaign distribution",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardCampaignList"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dashboard_data_v2/": {
      "get": {
        "description": "Returns the call success rate,average response time,ai accurary rate and total balance",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardMonthlyData"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/campaign-results/": {
      "get": {
        "description": "Returns the campaign distribution",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardCampaignResult"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/quick-campaign-results/": {
      "get": {
        "description": "Returns the campaign distribution",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required":true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardQuickCampaignResult"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/update-whitelabel/": {
      "get": {
        "description": "Retrieves the whitelabel domain configuration for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelabel domain configuration response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the whitelabel domain configuration for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Whitelabel configuration data to update",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WhitelabelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Whitelabel domain update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/verify-whitelabel/": {
      "post": {
        "description": "Verifies the whitelabel domain configuration for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Domain and verification step for whitelabel verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyWhitelabelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Whitelabel domain verification response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyWhitelabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/change/agency/credit_price/": {
      "get": {
        "description": "Retrieves the credit price for the agency",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credit price response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditPriceResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Updates the credit price for the agency",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Credit price to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditPriceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credit price update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditPriceResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/create-stripe-product/": {
      "post": {
        "description": "Creates a new Stripe product and associated price",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product details for creating a Stripe product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripeProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stripe product creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStripeProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/list-stripe-products/": {
      "get": {
        "description": "Retrieves a list of Stripe products and their associated prices",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stripe products list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStripeProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/create-subscription-link/": {
      "post": {
        "description": "Creates a Stripe payment link for a subscription",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Price ID for creating the subscription payment link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscription payment link creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionLinkResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/delete-stripe-products/{product_id}/": {
      "delete": {
        "description": "Hides or deactivates a Stripe product",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "Unique identifier for the Stripe product to be hidden",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stripe product hide response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteStripeProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/your-credit-plans/": {
      "get": {
        "description": "Retrieves a list of available credit plans for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credit plans list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditPlansResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new credit plan for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details for creating a new credit plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditPlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credit plan creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditPlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/your-credit-plans/{id}/": {
      "delete": {
        "description": "Deletes a specific credit plan by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the credit plan to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Credit plan deleted successfully, no content returned"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/purchased-themes/": {
      "get": {
        "description": "Retrieves a list of purchased themes for the tenant",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchased themes list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchasedThemesResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/create-checkout-session-theme/": {
      "post": {
        "description": "Creates a Stripe checkout session for purchasing a theme",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout session creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckoutSessionThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v2/aicallagent-list/": {
      "get": {
        "description": "Retrieves a paginated list of AI call agents with optional search and sorting",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term to filter agents",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Field to sort by (prefix with '-' for descending order)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "-updated_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI call agents list response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AICallAgentListResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agent/create/": {
      "post": {
        "description": "Creates a new AI call agent with default settings",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI call agent creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
     "/llm/update/{llm_id}/": {
      "get": {
        "description": "Retrieves the configuration of an existing LLM by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "llm_id",
            "in": "path",
            "description": "Unique identifier for the LLM to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LLM retrieval response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLLMResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the configuration of an existing LLM by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "llm_id",
            "in": "path",
            "description": "Unique identifier for the LLM to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "LLM configuration details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLLMRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "LLM update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLLMResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agent/update/{agent_id}/": {
      "patch": {
        "description": "Updates the configuration of an existing AI call agent by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agent_id",
            "in": "path",
            "description": "Unique identifier for the AI call agent to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "example": "16b980523634a6dc504898cda492e939"
            }
          }
        ],
        "requestBody": {
          "description": "Configuration details to update for the AI call agent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "AI call agent update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the configuration of an existing AI call agent by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agent_id",
            "in": "path",
            "description": "Unique identifier for the AI call agent to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "example": "16b980523634a6dc504898cda492e939"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI call agent retrieval response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an existing AI call agent by its ID",
        "parameters": [
          {
            "name": "Company-Name",
            "in": "header",
            "description": "The name of the schema to be used for the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agent_id",
            "in": "path",
            "description": "Unique identifier for the AI call agent to delete",
            "required": true,
            "schema": {
              "type": "string",
              "example": "16b980523634a6dc504898cda492e939"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI call agent deletion response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates whether the deletion was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Message describing the result of the deletion",
                      "example": "deleted success"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }                     
  },
  "components": {
    "schemas": {
       "Login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password"
          }
        }
      },
       "LoginResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the login was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the login request"
          },
          "data": {
            "type": "object",
            "required": ["user"],
            "properties": {
              "user": {
                "type": "object",
                "required": [
                  "id",
                  "email",
                  "first_name",
                  "last_name",
                  "profile_picture",
                  "contact_number",
                  "email_verified",
                  "companies",
                  "access_token",
                  "refresh_token",
                  "is_superadmin",
                  "agent_exists",
                  "subscription_status",
                  "is_suspended",
                  "ghl_connected",
                  "term_condition_excepted",
                  "twilio_type",
                  "salesforce_connected",
                  "snowie_connected",
                  "telnyx_connected",
                  "spreadsheet_connected",
                  "login_domain"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "User's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User's last name"
                  },
                  "profile_picture": {
                    "type": "string",
                    "description": "URL to the user's profile picture"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "User's contact phone number"
                  },
                  "email_verified": {
                    "type": "boolean",
                    "description": "Indicates if the user's email is verified"
                  },
                  "companies": {
                    "type": "object",
                    "required": ["user_type", "company_id", "company_name", "company_name_view"],
                    "properties": {
                      "user_type": {
                        "type": "string",
                        "description": "Type of user within the company"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Unique identifier for the company"
                      },
                      "company_name": {
                        "type": "string",
                        "description": "Name of the company"
                      },
                      "company_name_view": {
                        "type": "string",
                        "description": "Display name of the company"
                      }
                    }
                  },
                  "access_token": {
                    "type": "string",
                    "description": "Access token for authentication"
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "Refresh token for renewing access"
                  },
                  "is_superadmin": {
                    "type": "boolean",
                    "description": "Indicates if the user is a superadmin"
                  },
                  "agent_exists": {
                    "type": "boolean",
                    "description": "Indicates if an agent exists for the user"
                  },
                  "subscription_status": {
                    "type": "string",
                    "description": "Status of the user's subscription"
                  },
                  "is_suspended": {
                    "type": "boolean",
                    "description": "Indicates if the user's account is suspended"
                  },
                  "ghl_connected": {
                    "type": "boolean",
                    "description": "Indicates if GoHighLevel is connected"
                  },
                  "term_condition_excepted": {
                    "type": "boolean",
                    "description": "Indicates if terms and conditions are accepted"
                  },
                  "twilio_type": {
                    "type": "string",
                    "description": "Type of Twilio integration"
                  },
                  "salesforce_connected": {
                    "type": "boolean",
                    "description": "Indicates if Salesforce is connected"
                  },
                  "snowie_connected": {
                    "type": "boolean",
                    "description": "Indicates if Snowie is connected"
                  },
                  "telnyx_connected": {
                    "type": "boolean",
                    "description": "Indicates if Telnyx is connected"
                  },
                  "spreadsheet_connected": {
                    "type": "boolean",
                    "description": "Indicates if spreadsheet integration is connected"
                  },
                  "login_domain": {
                    "type": "string",
                    "description": "Domain used for login"
                  }
                }
              }
            }
          }
        }
      },
       "ForgotPassword": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          }
        }
      },
        "ForgotPasswordResponse": {
        "type": "object",
        "required": ["success", "status_code", "data", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response"
          },
          "data": {
            "type": "object",
            "required": ["email"],
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["access_token"],
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access token for authentication"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the logout was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the logout request"
          },
          "data": {
            "type": "object",
            "description": "Empty object containing no additional data"
          }
        }
      },
       "PasswordResetVerifyResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the token verification was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the token verification"
          },
          "data": {
            "type": "object",
            "description": "Empty object containing no additional data"
          }
        }
      },
      "PasswordResetCompleteRequest": {
        "type": "object",
        "required": ["uidb64", "token", "password"],
        "properties": {
          "uidb64": {
            "type": "string",
            "description": "Base64 encoded user ID"
          },
          "token": {
            "type": "string",
            "description": "Password reset token"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "New password for the user"
          }
        }
      },
      "PasswordResetCompleteResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the password reset was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the password reset request"
          },
          "data": {
            "type": "object",
            "description": "Empty object containing no additional data"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["refresh"],
        "properties": {
          "refresh": {
            "type": "string",
            "description": "Refresh token for obtaining a new access token"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "required": ["access"],
        "properties": {
          "access": {
            "type": "string",
            "description": "New access token"
          }
        }
      },
      "DashboardData": {
        "type": "object",
        "required": [
          "total_outbound_calls",
          "success_rate",
          "call_duration",
          "success_rate_breakdown",
          "ai_accuracy_rate"
        ],
        "properties": {
          "total_outbound_calls": {
            "type": "integer",
            "description": "Total number of outbound calls"
          },
          "success_rate": {
            "type": "number",
            "format": "float",
            "description": "Overall success rate percentage"
          },
          "call_duration": {
            "type": "object",
            "required": [
              "overall",
              "daily",
              "weekly",
              "monthly",
              "rate_of_change_call_duration"
            ],
            "properties": {
              "overall": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration overall"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration overall"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration overall"
                  }
                }
              },
              "daily": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration for the day"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration for the day"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration for the day"
                  }
                }
              },
              "weekly": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration for the week"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration for the week"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration for the week"
                  }
                }
              },
              "monthly": {
                "type": "object",
                "required": ["average", "peak", "low"],
                "properties": {
                  "average": {
                    "type": "number",
                    "format": "float",
                    "description": "Average call duration for the month"
                  },
                  "peak": {
                    "type": "integer",
                    "description": "Maximum call duration for the month"
                  },
                  "low": {
                    "type": "integer",
                    "description": "Minimum call duration for the month"
                  }
                }
              },
              "rate_of_change_call_duration": {
                "type": "number",
                "format": "float",
                "description": "Rate of change in call duration"
              }
            }
          },
          "success_rate_breakdown": {
            "type": "object",
            "required": [
              "daily",
              "weekly",
              "monthly",
              "rate_of_change_success_rate"
            ],
            "properties": {
              "daily": {
                "type": "number",
                "format": "float",
                "description": "Daily success rate percentage"
              },
              "weekly": {
                "type": "number",
                "format": "float",
                "description": "Weekly success rate percentage"
              },
              "monthly": {
                "type": "number",
                "format": "float",
                "description": "Monthly success rate percentage"
              },
              "rate_of_change_success_rate": {
                "type": "number",
                "format": "float",
                "description": "Rate of change in success rate"
              }
            }
          },
          "ai_accuracy_rate": {
            "type": "object",
            "required": [
              "ai_accuracy",
              "total_sentiment",
              "transcription_rate",
              "rate_of_change_ai_accuracy_rate"
            ],
            "properties": {
              "ai_accuracy": {
                "type": "number",
                "format": "float",
                "description": "AI accuracy percentage"
              },
              "total_sentiment": {
                "type": "number",
                "format": "float",
                "description": "Total sentiment score"
              },
              "transcription_rate": {
                "type": "number",
                "format": "float",
                "description": "Transcription accuracy rate"
              },
              "rate_of_change_ai_accuracy_rate": {
                "type": "number",
                "format": "float",
                "description": "Rate of change in AI accuracy rate"
              }
            }
          }
        }
      },
      "DashboardCampaignList": {
  "type": "object",
  "required": ["response", "data"],
  "properties": {
    "response": {
      "type": "string",
      "description": "Status of the response",
      "enum": ["success"]
    },
    "data": {
      "type": "object",
      "required": ["inbound_campaigns", "outbound_campaigns", "quick_campaigns"],
      "properties": {
        "inbound_campaigns": {
          "type": "integer",
          "description": "Number of inbound campaigns"
        },
        "outbound_campaigns": {
          "type": "integer",
          "description": "Number of outbound campaigns"
        },
        "quick_campaigns": {
          "type": "integer",
          "description": "Number of quick campaigns"
        }
      }
    }
  }
      },
        "DashboardMonthlyData": {
        "type": "object",
        "required": [
          "success",
          "message",
          "total_cost",
          "total_call_duration",
          "completed_calls_percentage",
          "other_call_percentage",
          "monthly_data"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the data fetch was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          },
          "total_cost": {
            "type": "number",
            "format": "float",
            "description": "Total cost of the calls"
          },
          "total_call_duration": {
            "type": "integer",
            "description": "Total duration of all calls in seconds"
          },
          "completed_calls_percentage": {
            "type": "number",
            "format": "float",
            "description": "Percentage of calls that were completed"
          },
          "other_call_percentage": {
            "type": "number",
            "format": "float",
            "description": "Percentage of other (non-completed) calls"
          },
          "monthly_data": {
            "type": "array",
            "description": "Array of monthly data metrics",
            "items": {
              "type": "object",
              "required": ["name", "data"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the metric (e.g., Total Calls)"
                },
                "data": {
                  "type": "array",
                  "description": "Array of integer values representing the metric data for each month",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
         "DashboardCampaignResult": {
        "type": "object",
        "required": [
          "count",
          "next",
          "previous",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of campaign results"
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "URL to the next page of results"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "URL to the previous page of results"
          },
          "results": {
            "type": "array",
            "description": "Array of campaign result objects",
            "items": {
              "type": "object",
              "required": [
                "id",
                "sid",
                "full_name",
                "contact_number",
                "call_duration",
                "status",
                "appointment_booked",
                "outcome",
                "contact_id",
                "direction",
                "recording_url",
                "transcription",
                "transcription_text",
                "notes",
                "improvement_tags",
                "credit_deduction",
                "errors",
                "calender_id",
                "response_sentiment",
                "created_at",
                "updated_at",
                "campaign"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the campaign result"
                },
                "sid": {
                  "type": "string",
                  "nullable": true,
                  "description": "Session ID"
                },
                "full_name": {
                  "type": "string",
                  "description": "Full name of the contact"
                },
                "contact_number": {
                  "type": "string",
                  "description": "Contact phone number"
                },
                "call_duration": {
                  "type": "integer",
                  "description": "Duration of the call in seconds"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the call"
                },
                "appointment_booked": {
                  "type": "boolean",
                  "description": "Indicates if an appointment was booked"
                },
                "outcome": {
                  "type": "string",
                  "description": "Outcome of the campaign"
                },
                "contact_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the contact"
                },
                "direction": {
                  "type": "string",
                  "description": "Direction of the call (inbound/outbound)"
                },
                "recording_url": {
                  "type": "string",
                  "nullable": true,
                  "description": "URL to the call recording"
                },
                "transcription": {
                  "type": "array",
                  "description": "Array of transcription data",
                  "items": {
                    "type": "string"
                  }
                },
                "transcription_text": {
                  "type": "string",
                  "description": "Full transcription text"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes for the campaign"
                },
                "improvement_tags": {
                  "type": "array",
                  "description": "Array of tags for improvement",
                  "items": {
                    "type": "string"
                  }
                },
                "credit_deduction": {
                  "type": "string",
                  "description": "Credit deduction details"
                },
                "errors": {
                  "type": "string",
                  "description": "Any errors encountered"
                },
                "calender_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Calendar ID associated with the call"
                },
                "response_sentiment": {
                  "type": "string",
                  "description": "Sentiment of the response"
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp when the result was created"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Timestamp when the result was last updated"
                },
                "campaign": {
                  "type": "string",
                  "description": "Name or ID of the campaign"
                }
              }
            }
          }
        }
      },
      "DashboardQuickCampaignResult": {
        "type": "object",
        "required": [
          "count",
          "next",
          "previous",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of quick campaign results"
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "URL to the next page of results"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "URL to the previous page of results"
          },
          "results": {
            "type": "array",
            "description": "Array of quick campaign result objects",
            "items": {
              "type": "object",
              "required": [
                "id",
                "sid",
                "contact_id",
                "contact_number",
                "email",
                "first_name",
                "last_name",
                "company_name",
                "industry",
                "address",
                "custom1",
                "custom2",
                "custom3",
                "custom4",
                "scheduling_charge",
                "calender_id",
                "appointment_booked",
                "call_duration",
                "status",
                "improvement_tags",
                "outcome",
                "recording_url",
                "transcription",
                "transcription_text",
                "notes",
                "credit_deduction",
                "errors",
                "response_sentiment",
                "triggered_by_crm",
                "created_at",
                "updated_at",
                "quick_campaign"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the quick campaign result"
                },
                "sid": {
                  "type": "string",
                  "nullable": true,
                  "description": "Session ID"
                },
                "contact_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the contact"
                },
                "contact_number": {
                  "type": "string",
                  "description": "Contact phone number"
                },
                "email": {
                  "type": "string",
                  "nullable": true,
                  "description": "Email address of the contact"
                },
                "first_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "First name of the contact"
                },
                "last_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Last name of the contact"
                },
                "company_name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Name of the company"
                },
                "industry": {
                  "type": "string",
                  "nullable": true,
                  "description": "Industry of the contact"
                },
                "address": {
                  "type": "string",
                  "nullable": true,
                  "description": "Address of the contact"
                },
                "custom1": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 1"
                },
                "custom2": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 2"
                },
                "custom3": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 3"
                },
                "custom4": {
                  "type": "string",
                  "nullable": true,
                  "description": "Custom field 4"
                },
                "scheduling_charge": {
                  "type": "string",
                  "description": "Scheduling charge for the call"
                },
                "calender_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Calendar ID associated with the call"
                },
                "appointment_booked": {
                  "type": "boolean",
                  "description": "Indicates if an appointment was booked"
                },
                "call_duration": {
                  "type": "integer",
                  "description": "Duration of the call in seconds"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the call"
                },
                "improvement_tags": {
                  "type": "array",
                  "description": "Array of tags for improvement",
                  "items": {
                    "type": "string"
                  }
                },
                "outcome": {
                  "type": "string",
                  "description": "Outcome of the campaign"
                },
                "recording_url": {
                  "type": "string",
                  "nullable": true,
                  "description": "URL to the call recording"
                },
                "transcription": {
                  "type": "array",
                  "description": "Array of transcription data",
                  "items": {
                    "type": "string"
                  }
                },
                "transcription_text": {
                  "type": "string",
                  "description": "Full transcription text"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes for the campaign"
                },
                "credit_deduction": {
                  "type": "string",
                  "description": "Credit deduction details"
                },
                "errors": {
                  "type": "string",
                  "description": "Any errors encountered"
                },
                "response_sentiment": {
                  "type": "string",
                  "description": "Sentiment of the response"
                },
                "triggered_by_crm": {
                  "type": "string",
                  "description": "CRM system that triggered the campaign"
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp when the result was created"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Timestamp when the result was last updated"
                },
                "quick_campaign": {
                  "type": "string",
                  "description": "Identifier for the quick campaign"
                }
              }
            }
          }
        }
      },
       "WhitelabelRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain name for the whitelabel"
          },
          "legal_name": {
            "type": "string",
            "description": "Legal name of the entity"
          },
          "address": {
            "type": "string",
            "description": "Address associated with the entity"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Contact email address"
          },
          "reselling_price": {
            "type": "string",
            "description": "Price for reselling"
          },
          
          "btn_color": {
            "type": "string",
            "description": "Color for buttons in hex format"
          },
          "btn_hover_color": {
            "type": "string",
            "description": "Hover color for buttons in hex format"
          },
          "btn_text_color": {
            "type": "string",
            "description": "Text color for buttons in hex format"
          },
          "background_color_primary": {
            "type": "string",
            "description": "Primary background color in hex format"
          },
          "background_color_secondary": {
            "type": "string",
            "description": "Secondary background color in hex format"
          },
          "select_text_color": {
            "type": "string",
            "description": "Text color for select elements in hex format"
          },
          "text_color": {
            "type": "string",
            "description": "General text color in hex format"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "description": "URL to the logo image"
          },
          "fav_icon": {
            "type": "string",
            "format": "uri",
            "description": "URL to the favicon image"
          },
          "icon_color": {
            "type": "string",
            "description": "Color for icons in hex format"
          },
          "icon_background_color": {
            "type": "string",
            "description": "Background color for icons in hex format"
          },
          "hide_video": {
            "type": "boolean",
            "description": "Indicates if video content should be hidden"
          },
          
          "email_template_subject": {
            "type": "string",
            "description": "Subject line for email templates"
          },
          "email_template": {
            "type": "string",
            "description": "Content of the email template"
          },
          "coustum_css": {
            "type": "string",
            "description": "Custom CSS for the whitelabel"
          },
          "coustum_js": {
            "type": "string",
            "description": "Custom JavaScript for the whitelabel"
          },
          "loginpage_theme_name": {
            "type": "string",
            "description": "Name of the theme for the login page"
          },
          "text_hover_color": {
            "type": "string",
            "nullable": true,
            "description": "Text hover color in hex format"
          },
          "logo_background_color": {
            "type": "string",
            "nullable": true,
            "description": "Background color for the logo in hex format"
          },
          "layout_border_color": {
            "type": "string",
            "nullable": true,
            "description": "Border color for the layout in hex format"
          },
          "button_border_color": {
            "type": "string",
            "nullable": true,
            "description": "Border color for buttons in hex format"
          },
          "text_color_light": {
            "type": "string",
            "nullable": true,
            "description": "Light text color in hex format"
          },
          "sidebar_tab_hover_color": {
            "type": "string",
            "nullable": true,
            "description": "Hover color for sidebar tabs in hex format"
          }
        }
      },
      "WhitelabelResponse": {
        "type": "object",
        "required": ["success", "status_code", "data", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response"
          },
          "data": {
            "type": "object",
            "required": [
              "id",
              "domain",
              "is_primary",
              "activate",
              "legal_name",
              "address",
              "email",
              "subsription_type",
              "subsription_id",
              "reselling_price",
              "stripe_key",
              "btn_color",
              "btn_hover_color",
              "btn_text_color",
              "background_color_primary",
              "background_color_secondary",
              "select_text_color",
              "text_color",
              "logo",
              "fav_icon",
              "icon_color",
              "icon_background_color",
              "hide_video",
              "sendgrid_token",
              "sendgrid_email",
              "sendgrid_domain_id",
              "domain_verified",
              "email_template_subject",
              "email_template",
              "coustum_css",
              "coustum_js",
              "loginpage_theme_name",
              "strip_account_id",
              "created_at",
              "updated_at",
              "tenant"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the whitelabel domain"
              },
              "domain": {
                "type": "string",
                "description": "Domain name for the whitelabel"
              },
              "is_primary": {
                "type": "boolean",
                "description": "Indicates if this is the primary domain"
              },
              "activate": {
                "type": "boolean",
                "description": "Indicates if the domain is active"
              },
              "legal_name": {
                "type": "string",
                "description": "Legal name of the entity"
              },
              "address": {
                "type": "string",
                "description": "Address associated with the entity"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Contact email address"
              },
              "subsription_type": {
                "type": "string",
                "description": "Type of subscription"
              },
              "subsription_id": {
                "type": "string",
                "description": "Unique identifier for the subscription"
              },
              "reselling_price": {
                "type": "string",
                "description": "Price for reselling"
              },
              "stripe_key": {
                "type": "string",
                "description": "Stripe API key for payments"
              },
              "btn_color": {
                "type": "string",
                "description": "Color for buttons in hex format"
              },
              "btn_hover_color": {
                "type": "string",
                "description": "Hover color for buttons in hex format"
              },
              "btn_text_color": {
                "type": "string",
                "description": "Text color for buttons in hex format"
              },
              "background_color_primary": {
                "type": "string",
                "description": "Primary background color in hex format"
              },
              "background_color_secondary": {
                "type": "string",
                "description": "Secondary background color in hex format"
              },
              "select_text_color": {
                "type": "string",
                "description": "Text color for select elements in hex format"
              },
              "text_color": {
                "type": "string",
                "description": "General text color in hex format"
              },
              "logo": {
                "type": "string",
                "format": "uri",
                "description": "URL to the logo image"
              },
              "fav_icon": {
                "type": "string",
                "format": "uri",
                "description": "URL to the favicon image"
              },
              "icon_color": {
                "type": "string",
                "description": "Color for icons in hex format"
              },
              "icon_background_color": {
                "type": "string",
                "description": "Background color for icons in hex format"
              },
              "hide_video": {
                "type": "boolean",
                "description": "Indicates if video content should be hidden"
              },
              "sendgrid_token": {
                "type": "string",
                "nullable": true,
                "description": "SendGrid API token"
              },
              "sendgrid_email": {
                "type": "string",
                "format": "email",
                "description": "SendGrid email address"
              },
              "sendgrid_domain_id": {
                "type": "string",
                "description": "SendGrid domain ID"
              },
              "domain_verified": {
                "type": "boolean",
                "description": "Indicates if the domain is verified"
              },
              "email_template_subject": {
                "type": "string",
                "description": "Subject line for email templates"
              },
              "email_template": {
                "type": "string",
                "description": "Content of the email template"
              },
              "coustum_css": {
                "type": "string",
                "description": "Custom CSS for the whitelabel"
              },
              "coustum_js": {
                "type": "string",
                "description": "Custom JavaScript for the whitelabel"
              },
              "loginpage_theme_name": {
                "type": "string",
                "description": "Name of the theme for the login page"
              },
              "strip_account_id": {
                "type": "string",
                "description": "Stripe account ID"
              },
              "text_hover_color": {
                "type": "string",
                "nullable": true,
                "description": "Text hover color in hex format"
              },
              "logo_background_color": {
                "type": "string",
                "nullable": true,
                "description": "Background color for the logo in hex format"
              },
              "layout_border_color": {
                "type": "string",
                "nullable": true,
                "description": "Border color for the layout in hex format"
              },
              "button_border_color": {
                "type": "string",
                "nullable": true,
                "description": "Border color for buttons in hex format"
              },
              "text_color_light": {
                "type": "string",
                "nullable": true,
                "description": "Light text color in hex format"
              },
              "sidebar_tab_hover_color": {
                "type": "string",
                "nullable": true,
                "description": "Hover color for sidebar tabs in hex format"
              },
              "razorpay_account_status": {
                "type": "string",
                "nullable": true,
                "description": "Status of the Razorpay account"
              },
              "razorpay_product_config_id": {
                "type": "string",
                "nullable": true,
                "description": "Razorpay product configuration ID"
              },
              "razorpay_account_id": {
                "type": "string",
                "nullable": true,
                "description": "Razorpay account ID"
              },
              "business_type": {
                "type": "string",
                "nullable": true,
                "description": "Type of business"
              },
              "business_category": {
                "type": "string",
                "nullable": true,
                "description": "Category of the business"
              },
              "business_subcategory": {
                "type": "string",
                "nullable": true,
                "description": "Subcategory of the business"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the whitelabel domain was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the whitelabel domain was last updated"
              },
              "tenant": {
                "type": "integer",
                "description": "Unique identifier for the tenant"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "VerifyWhitelabelRequest": {
        "type": "object",
        "required": ["domain", "step"],
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain name for the whitelabel"
          },
          "step": {
            "type": "string",
            "description": "Verification step (e.g., email)"
          }
        }
      },
      "VerifyWhitelabelResponse": {
        "type": "object",
        "required": ["success", "status_code", "data", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the verification was successful"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code of the response"
          },
          "data": {
            "type": "object",
            "required": ["verified", "ip"],
            "properties": {
              "verified": {
                "type": "boolean",
                "description": "Indicates if the domain is verified"
              },
              "ip": {
                "type": "string",
                "description": "IP address associated with the domain"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the verification"
          }
        }
      },
      "CreditPriceRequest": {
        "type": "object",
        "required": ["credit_price"],
        "properties": {
          "credit_price": {
            "type": "number",
            "format": "float",
            "description": "The credit price for the agency"
          }
        }
      },
      "CreditPriceResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["credit_price"],
            "properties": {
              "credit_price": {
                "type": "number",
                "format": "float",
                "description": "The credit price for the agency"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
       "CreateStripeProductRequest": {
        "type": "object",
        "required": ["product_name", "unit_amount", "currency", "product_description"],
        "properties": {
          "product_name": {
            "type": "string",
            "description": "Name of the Stripe product"
          },
          "unit_amount": {
            "type": "integer",
            "description": "Price amount in the smallest currency unit (e.g., cents for USD)"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the price (e.g., usd)"
          },
          "product_description": {
            "type": "string",
            "description": "Description of the Stripe product"
          }
        }
      },
      "CreateStripeProductResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["product_id", "product_name", "product_description", "price_id", "prices_amount", "prices_currency"],
            "properties": {
              "product_id": {
                "type": "string",
                "description": "Unique identifier for the created Stripe product"
              },
              "product_name": {
                "type": "string",
                "description": "Name of the created Stripe product"
              },
              "product_description": {
                "type": "string",
                "description": "Description of the created Stripe product"
              },
              "price_id": {
                "type": "string",
                "description": "Unique identifier for the created price"
              },
              "prices_amount": {
                "type": "integer",
                "description": "Price amount in the smallest currency unit"
              },
              "prices_currency": {
                "type": "string",
                "description": "Currency code for the price"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
       "ListStripeProductsResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["product_prices"],
            "properties": {
              "product_prices": {
                "type": "array",
                "description": "List of Stripe products and their prices",
                "items": {
                  "type": "object",
                  "required": ["product_id", "product_name", "product_description", "prices_id", "prices_amount", "prices_currency"],
                  "properties": {
                    "product_id": {
                      "type": "string",
                      "description": "Unique identifier for the Stripe product"
                    },
                    "product_name": {
                      "type": "string",
                      "description": "Name of the Stripe product"
                    },
                    "product_description": {
                      "type": "string",
                      "description": "Description of the Stripe product"
                    },
                    "prices_id": {
                      "type": "string",
                      "description": "Unique identifier for the price"
                    },
                    "prices_amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Price amount in the smallest currency unit"
                    },
                    "prices_currency": {
                      "type": "string",
                      "description": "Currency code for the price"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "CreateSubscriptionLinkRequest": {
        "type": "object",
        "required": ["price_id"],
        "properties": {
          "price_id": {
            "type": "string",
            "description": "Unique identifier for the Stripe price"
          }
        }
      },
      "CreateSubscriptionLinkResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "required": ["payment_link"],
            "properties": {
              "payment_link": {
                "type": "string",
                "format": "uri",
                "description": "URL for the Stripe payment link"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
       "DeleteStripeProductResponse": {
        "type": "object",
        "required": ["success", "errors", "response", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "errors": {
            "type": "array",
            "description": "List of errors, if any",
            "items": {
              "type": "string"
            }
          },
          "response": {
            "type": "object",
            "description": "Empty object containing no additional data"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          }
        }
      },
      "CreditPlansResponse": {
        "type": "array",
        "description": "List of available credit plans",
        "items": {
          "type": "object",
          "required": ["id", "name", "description", "amount", "credits", "currency", "discount", "features", "created_at", "updated_at"],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for the credit plan"
            },
            "name": {
              "type": "string",
              "description": "Name of the credit plan"
            },
            "description": {
              "type": "string",
              "description": "Description of the credit plan"
            },
            "amount": {
              "type": "string",
              "description": "Price of the credit plan"
            },
            "credits": {
              "type": "string",
              "description": "Number of credits included in the plan"
            },
            "currency": {
              "type": "string",
              "description": "Currency code for the price (e.g., usd)"
            },
            "discount": {
              "type": "integer",
              "description": "Discount percentage for the plan"
            },
            "features": {
              "type": "object",
              "description": "Features included in the credit plan",
              "additionalProperties": {
                "type": "string",
                "description": "Description of a specific feature"
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the credit plan was created"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the credit plan was last updated"
            }
          }
        }
      },
      "CreateCreditPlanRequest": {
        "type": "object",
        "required": ["name", "description", "amount", "credits", "currency", "discount", "features"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the credit plan"
          },
          "description": {
            "type": "string",
            "description": "Description of the credit plan"
          },
          "amount": {
            "type": "integer",
            "description": "Price of the credit plan"
          },
          "credits": {
            "type": "integer",
            "description": "Number of credits included in the plan"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the price (e.g., usd)"
          },
          "discount": {
            "type": "integer",
            "description": "Discount percentage for the plan"
          },
          "features": {
            "type": "object",
            "description": "Features included in the credit plan",
            "additionalProperties": {
              "type": "string",
              "description": "Description of a specific feature"
            }
          }
        }
      },
      "CreateCreditPlanResponse": {
        "type": "object",
        "required": ["id", "name", "description", "amount", "credits", "currency", "discount", "features", "created_at", "updated_at"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the credit plan"
          },
          "name": {
            "type": "string",
            "description": "Name of the credit plan"
          },
          "description": {
            "type": "string",
            "description": "Description of the credit plan"
          },
          "amount": {
            "type": "string",
            "description": "Price of the credit plan"
          },
          "credits": {
            "type": "string",
            "description": "Number of credits included in the plan"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the price (e.g., usd)"
          },
          "discount": {
            "type": "integer",
            "description": "Discount percentage for the plan"
          },
          "features": {
            "type": "object",
            "description": "Features included in the credit plan",
            "additionalProperties": {
              "type": "string",
              "description": "Description of a specific feature"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the credit plan was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the credit plan was last updated"
          }
        }
      },
      "PurchasedThemesResponse": {
        "type": "array",
        "description": "List of purchased themes",
        "items": {
          "type": "object",
          "required": ["id", "name", "slug", "description", "preview_url"],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for the theme"
            },
            "name": {
              "type": "string",
              "description": "Name of the theme"
            },
            "slug": {
              "type": "string",
              "description": "Slug identifier for the theme"
            },
            "description": {
              "type": "string",
              "description": "Description of the theme"
            },
            "preview_url": {
              "type": "string",
              "format": "uri",
              "description": "URL to preview the theme"
            }
          }
        }
      },
      "CreateCheckoutSessionThemeResponse": {
        "type": "object",
        "required": ["checkout_url"],
        "properties": {
          "checkout_url": {
            "type": "string",
            "format": "uri",
            "description": "URL for the Stripe checkout session"
          }
        }
      },
       "AICallAgentListResponse": {
        "type": "object",
        "required": ["total_count", "total_page", "Current_page_no", "next_page_number", "previous_page_number", "page_size", "data"],
        "properties": {
          "total_count": {
            "type": "integer",
            "description": "Total number of AI call agents"
          },
          "total_page": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "Current_page_no": {
            "type": "integer",
            "description": "Current page number"
          },
          "next_page_number": {
            "type": "integer",
            "nullable": true,
            "description": "Next page number, null if no next page"
          },
          "previous_page_number": {
            "type": "string",
            "nullable": true,
            "description": "Previous page number, null if no previous page"
          },
          "page_size": {
            "type": "integer",
            "description": "Number of agents per page"
          },
          "data": {
            "type": "array",
            "description": "List of AI call agents",
            "items": {
              "type": "object",
              "required": [
                "pk",
                "agent_name",
                "agent_id",
                "voice_id",
                "language",
                "interruption_sensitivity",
                "voicemail",
                "voicemail_message",
                "end_call_after_silence",
                "max_call_duration",
                "reminder_trigger",
                "ambient_sound",
                "analysis_data",
                "llm",
                "voice_speed",
                "voice_temperature",
                "volume",
                "enable_backchannel",
                "normalize_for_speech",
                "enable_transcription_formatting",
                "reminder_trigger_ms",
                "reminder_max_count",
                "boosted_keywords",
                "ambient_sound_volume",
                "voicemail_detection_timeout_ms",
                "begin_message_delay_ms",
                "updated_at",
                "is_locked",
                "calendar_id",
                "inbound_appoitment",
                "ring_duration_sec",
                "stt_mode",
                "backchannel_words",
                "backchannel_frequency",
                "call_scheduling",
                "agent_crm_type",
                "voicemail_option"
              ],
              "properties": {
                "pk": {
                  "type": "integer",
                  "description": "Primary key for the AI call agent"
                },
                "agent_name": {
                  "type": "string",
                  "description": "Name of the AI call agent"
                },
                "agent_id": {
                  "type": "string",
                  "description": "Unique identifier for the AI call agent"
                },
                "voice_id": {
                  "type": "string",
                  "description": "Identifier for the voice used by the agent"
                },
                "language": {
                  "type": "string",
                  "description": "Language code or type (e.g., en-US, multi)"
                },
                "interruption_sensitivity": {
                  "type": "string",
                  "description": "Sensitivity level for interruptions"
                },
                "voicemail": {
                  "type": "boolean",
                  "description": "Indicates if voicemail is enabled"
                },
                "voicemail_message": {
                  "type": "string",
                  "nullable": true,
                  "description": "Voicemail message content"
                },
                "end_call_after_silence": {
                  "type": "integer",
                  "description": "Duration of silence before ending the call (in seconds)"
                },
                "max_call_duration": {
                  "type": "integer",
                  "description": "Maximum call duration (in minutes)"
                },
                "reminder_trigger": {
                  "type": "integer",
                  "description": "Time before triggering a reminder (in seconds)"
                },
                "ambient_sound": {
                  "type": "string",
                  "nullable": true,
                  "description": "Ambient sound setting"
                },
                "analysis_data": {
                  "type": "array",
                  "description": "Data for call analysis",
                  "items": {
                    "type": "string"
                  }
                },
                "llm": {
                  "type": "integer",
                  "description": "Identifier for the language model used"
                },
                "voice_speed": {
                  "type": "number",
                  "format": "float",
                  "description": "Speed of the voice"
                },
                "voice_temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "Temperature setting for voice generation"
                },
                "volume": {
                  "type": "number",
                  "format": "float",
                  "description": "Volume level for the voice"
                },
                "enable_backchannel": {
                  "type": "boolean",
                  "description": "Indicates if backchannel responses are enabled"
                },
                "normalize_for_speech": {
                  "type": "boolean",
                  "description": "Indicates if speech normalization is enabled"
                },
                "enable_transcription_formatting": {
                  "type": "boolean",
                  "description": "Indicates if transcription formatting is enabled"
                },
                "reminder_trigger_ms": {
                  "type": "integer",
                  "description": "Reminder trigger time in milliseconds"
                },
                "reminder_max_count": {
                  "type": "integer",
                  "description": "Maximum number of reminders"
                },
                "boosted_keywords": {
                  "type": "array",
                  "description": "List of keywords to boost in processing",
                  "items": {
                    "type": "string"
                  }
                },
                "ambient_sound_volume": {
                  "type": "number",
                  "format": "float",
                  "description": "Volume level for ambient sound"
                },
                "voicemail_detection_timeout_ms": {
                  "type": "integer",
                  "description": "Timeout for voicemail detection in milliseconds"
                },
                "begin_message_delay_ms": {
                  "type": "integer",
                  "description": "Delay before starting message in milliseconds"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the agent was last updated"
                },
                "is_locked": {
                  "type": "boolean",
                  "description": "Indicates if the agent is locked"
                },
                "calendar_id": {
                  "type": "string",
                  "nullable": true,
                  "description": "Identifier for associated calendar"
                },
                "inbound_appoitment": {
                  "type": "boolean",
                  "description": "Indicates if inbound appointment scheduling is enabled"
                },
                "ring_duration_sec": {
                  "type": "integer",
                  "description": "Ring duration in seconds"
                },
                "stt_mode": {
                  "type": "string",
                  "description": "Speech-to-text mode (e.g., fast)"
                },
                "backchannel_words": {
                  "type": "string",
                  "nullable": true,
                  "description": "Words used for backchannel responses"
                },
                "backchannel_frequency": {
                  "type": "number",
                  "format": "float",
                  "description": "Frequency of backchannel responses"
                },
                "call_scheduling": {
                  "type": "boolean",
                  "description": "Indicates if call scheduling is enabled"
                },
                "agent_crm_type": {
                  "type": "string",
                  "nullable": true,
                  "description": "Type of CRM integration for the agent"
                },
                "voicemail_option": {
                  "type": "object",
                  "description": "Voicemail options for the agent",
                  "properties": {
                    "action": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of voicemail action (e.g., hangup, prompt)"
                        },
                        "text": {
                          "type": "string",
                          "description": "Text for voicemail prompt, if applicable"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateAgentResponse": {
        "type": "object",
        "required": ["success", "message", "data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          },
          "data": {
            "type": "object",
            "required": ["agent", "llm"],
            "properties": {
              "agent": {
                "type": "object",
                "required": [
                  "pk",
                  "agent_name",
                  "agent_id",
                  "voice_id",
                  "language",
                  "interruption_sensitivity",
                  "voicemail",
                  "voicemail_message",
                  "end_call_after_silence",
                  "max_call_duration",
                  "reminder_trigger",
                  "ambient_sound",
                  "analysis_data",
                  "llm",
                  "voice_speed",
                  "voice_temperature",
                  "volume",
                  "enable_backchannel",
                  "normalize_for_speech",
                  "enable_transcription_formatting",
                  "reminder_trigger_ms",
                  "reminder_max_count",
                  "boosted_keywords",
                  "ambient_sound_volume",
                  "voicemail_detection_timeout_ms",
                  "begin_message_delay_ms",
                  "updated_at",
                  "is_locked",
                  "calendar_id",
                  "inbound_appoitment",
                  "ring_duration_sec",
                  "stt_mode",
                  "backchannel_words",
                  "backchannel_frequency",
                  "call_scheduling",
                  "agent_crm_type",
                  "voicemail_option"
                ],
                "properties": {
                  "pk": {
                    "type": "integer",
                    "description": "Primary key for the AI call agent"
                  },
                  "agent_name": {
                    "type": "string",
                    "description": "Name of the AI call agent"
                  },
                  "agent_id": {
                    "type": "string",
                    "description": "Unique identifier for the AI call agent"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "Identifier for the voice used by the agent"
                  },
                  "language": {
                    "type": "string",
                    "description": "Language code or type (e.g., en-US, multi)"
                  },
                  "interruption_sensitivity": {
                    "type": "string",
                    "description": "Sensitivity level for interruptions"
                  },
                  "voicemail": {
                    "type": "boolean",
                    "description": "Indicates if voicemail is enabled"
                  },
                  "voicemail_message": {
                    "type": "string",
                    "nullable": true,
                    "description": "Voicemail message content"
                  },
                  "end_call_after_silence": {
                    "type": "integer",
                    "description": "Duration of silence before ending the call (in seconds)"
                  },
                  "max_call_duration": {
                    "type": "integer",
                    "description": "Maximum call duration (in minutes)"
                  },
                  "reminder_trigger": {
                    "type": "integer",
                    "description": "Time before triggering a reminder (in seconds)"
                  },
                  "ambient_sound": {
                    "type": "string",
                    "nullable": true,
                    "description": "Ambient sound setting"
                  },
                  "analysis_data": {
                    "type": "array",
                    "description": "Data for call analysis",
                    "items": {
                      "type": "string"
                    }
                  },
                  "llm": {
                    "type": "integer",
                    "description": "Identifier for the language model used"
                  },
                  "voice_speed": {
                    "type": "number",
                    "format": "float",
                    "description": "Speed of the voice"
                  },
                  "voice_temperature": {
                    "type": "number",
                    "format": "float",
                    "description": "Temperature setting for voice generation"
                  },
                  "volume": {
                    "type": "number",
                    "format": "float",
                    "description": "Volume level for the voice"
                  },
                  "enable_backchannel": {
                    "type": "boolean",
                    "description": "Indicates if backchannel responses are enabled"
                  },
                  "normalize_for_speech": {
                    "type": "boolean",
                    "description": "Indicates if speech normalization is enabled"
                  },
                  "enable_transcription_formatting": {
                    "type": "boolean",
                    "description": "Indicates if transcription formatting is enabled"
                  },
                  "reminder_trigger_ms": {
                    "type": "integer",
                    "description": "Reminder trigger time in milliseconds"
                  },
                  "reminder_max_count": {
                    "type": "integer",
                    "description": "Maximum number of reminders"
                  },
                  "boosted_keywords": {
                    "type": "array",
                    "description": "List of keywords to boost in processing",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ambient_sound_volume": {
                    "type": "number",
                    "format": "float",
                    "description": "Volume level for ambient sound"
                  },
                  "voicemail_detection_timeout_ms": {
                    "type": "integer",
                    "description": "Timeout for voicemail detection in milliseconds"
                  },
                  "begin_message_delay_ms": {
                    "type": "integer",
                    "description": "Delay before starting message in milliseconds"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the agent was last updated"
                  },
                  "is_locked": {
                    "type": "boolean",
                    "description": "Indicates if the agent is locked"
                  },
                  "calendar_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Identifier for associated calendar"
                  },
                  "inbound_appoitment": {
                    "type": "boolean",
                    "description": "Indicates if inbound appointment scheduling is enabled"
                  },
                  "ring_duration_sec": {
                    "type": "integer",
                    "description": "Ring duration in seconds"
                  },
                  "stt_mode": {
                    "type": "string",
                    "description": "Speech-to-text mode (e.g., fast)"
                  },
                  "backchannel_words": {
                    "type": "string",
                    "nullable": true,
                    "description": "Words used for backchannel responses"
                  },
                  "backchannel_frequency": {
                    "type": "number",
                    "format": "float",
                    "description": "Frequency of backchannel responses"
                  },
                  "call_scheduling": {
                    "type": "boolean",
                    "description": "Indicates if call scheduling is enabled"
                  },
                  "agent_crm_type": {
                    "type": "string",
                    "nullable": true,
                    "description": "Type of CRM integration for the agent"
                  },
                  "voicemail_option": {
                    "type": "object",
                    "description": "Voicemail options for the agent",
                    "properties": {
                      "action": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of voicemail action (e.g., hangup)"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "llm": {
                "type": "object",
                "required": [
                  "pk",
                  "model",
                  "states",
                  "s2s_model",
                  "model_temperature",
                  "general_prompt",
                  "general_tools",
                  "begin_message",
                  "ghl_book_meeting",
                  "price_set_per_model",
                  "custom_message"
                ],
                "properties": {
                  "pk": {
                    "type": "integer",
                    "description": "Primary key for the language model"
                  },
                  "model": {
                    "type": "string",
                    "description": "Name of the language model"
                  },
                  "states": {
                    "type": "string",
                    "nullable": true,
                    "description": "State settings for the model"
                  },
                  "s2s_model": {
                    "type": "string",
                    "nullable": true,
                    "description": "Speech-to-speech model identifier"
                  },
                  "model_temperature": {
                    "type": "string",
                    "description": "Temperature setting for the model"
                  },
                  "general_prompt": {
                    "type": "string",
                    "description": "General prompt for the model"
                  },
                  "general_tools": {
                    "type": "array",
                    "description": "List of tools available to the model",
                    "items": {
                      "type": "object"
                    }
                  },
                  "begin_message": {
                    "type": "string",
                    "description": "Initial message for the model"
                  },
                  "ghl_book_meeting": {
                    "type": "boolean",
                    "description": "Indicates if meeting booking is enabled"
                  },
                  "price_set_per_model": {
                    "type": "string",
                    "description": "Price set for the model"
                  },
                  "custom_message": {
                    "type": "string",
                    "nullable": true,
                    "description": "Custom message for the model"
                  }
                }
              }
            }
          }
        }
      },
      "UpdateLLMRequest": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "enum": [
              "gpt-4o",
              "gpt-4o-mini",
              "gpt-4.1",
              "gpt-4.1-mini",
              "gpt-4.1-nano",
              "claude-3.7-sonnet",
              "claude-3.5-haiku",
              "gemini-2.0-flash",
              "gemini-2.0-flash-lite"
            ],
            "nullable": true,
            "description": "Select the underlying text LLM. If not set, defaults to gpt-4o."
          },
          "s2s_model": {
            "type": "string",
            "enum": ["gpt-4o-realtime", "gpt-4o-mini-realtime"],
            "nullable": true,
            "description": "Select the underlying speech-to-speech model. Can only set this or model, not both."
          },
          "model_temperature": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 1,
            "description": "Controls randomness of the response. Lower values are more deterministic, higher values are more random. Defaults to 0 if unset."
          },
          "model_high_priority": {
            "type": "boolean",
            "description": "Enables fast tier with high priority pool for lower latency. Defaults to false."
          },
          "general_prompt": {
            "type": "string",
            "nullable": true,
            "description": "General prompt appended to system prompt regardless of agent state."
          },
          "general_tools": {
    "type": "array",
    "items": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "end_call",
              "description": "The tool type to end the call."
            },
            "name": {
              "type": "string",
              "description": "The name of the tool.",
              "example": "end_call"
            },
            "description": {
              "type": "string",
              "description": "A description of what the tool does.",
              "example": "Terminates the ongoing call."
            }
          },
          "required": ["type", "name", "description"]
        },
        {
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "const": "call_transfer",
      "description": "The tool type to transfer the call."
    },
    "name": {
      "type": "string",
      "description": "The name of the tool, must not contain spaces.",
      "example": "transfer_call1",
      "pattern": "^[^\\s]+$"
    },
    "description": {
      "type": "string",
      "description": "A description of what the tool does.",
      "example": "Transfers the call to another agent or number."
    },
    "transfer_destination": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "predefined",
              "description": "Indicates a predefined phone number for transfer."
            },
            "number": {
              "type": "string",
              "description": "The phone number to transfer the call to in E.164 format.",
              "example": "+911111111111",
              "pattern": "^\\+[1-9]\\d{1,14}$"
            }
          },
          "required": ["type", "number"],
          "description": "Details for transferring to a predefined number."
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "inferred",
              "description": "Indicates dynamic routing for call transfer."
           

 },
            "prompt": {
              "type": "string",
              "description": "The prompt to determine the transfer destination.",
              "example": "If the user wants to reach support, transfer to +1 (925) 222-4452; if the user wants to reach sales, transfer to +1 (925) 1111-3444"
            }
          },
          "required": ["type", "prompt"],
          "description": "Details for dynamically determining the transfer destination."
        }
      ],
      "description": "The destination details for the call transfer.",
      "nullable": true
    },
    "transfer_option": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "cold_transfer",
              "description": "Indicates a cold transfer."
            },
            "show_transferee_as_caller": {
              "type": "boolean",
              "description": "Whether to display the transferee's number as the caller ID.",
              "example": false
            },
            "agent_detection_timeout_ms": {
              "type": "number",
              "description": "Time in milliseconds to wait before considering the transfer failed.",
              "example": 5000,
              "minimum": 10000,
              "maximum": 300000
            },
            "on_hold_music": {
              "type": "string",
              "description": "Music to play while the caller is being transferred.",
              "enum": ["none", "ringtone", "relaxing_sound", "uplifting_beats"],
              "example": "none"
            },
            "opt_out_human_detection": {
              "type": "boolean",
              "description": "Whether to skip human detection for the transfer.",
              "example": false
            },
            "opt_out_initial_message": {
              "type": "boolean",
              "description": "Whether to skip the AI saying 'Hello' after connecting the call.",
              "example": false
            }
          },
          "required": [
            "type",
            "show_transferee_as_caller",
            "agent_detection_timeout_ms",
            "on_hold_music",
            "opt_out_human_detection",
            "opt_out_initial_message"
          ],
          "description": "Options for cold transfer."
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "warm_transfer",
              "description": "Indicates a warm transfer."
            },
            "public_handoff_option": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "prompt",
                      "description": "Indicates a prompt-based handoff."
                    },
                    "prompt": {
                      "type": "string",
                      "description": "The prompt for the warm transfer public handoff.",
                      "example": "Please hold while I connect you to the support team."
                    }
                  },
                  "required": ["type", "prompt"],
                  "description": "Prompt-based public handoff for warm transfer."
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "static_message",
                      "description": "Indicates a static message handoff."
                    },
                    "message": {
                      "type": "string",
                      "description": "The static message for the warm transfer public handoff.",
                      "example": "Transferring your call now."
                    }
                  },
                  "required": ["type", "message"],
                  "description": "Static message public handoff for warm transfer."
                }
              ],
              "description": "Public handoff options for warm transfer."
            },
            "private_handoff_option": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "prompt",
                      "description": "Indicates a prompt-based private handoff."
                    },
                    "prompt": {
                      "type": "string",
                      "description": "The prompt for the warm transfer private handoff.",
                      "example": "This is a call regarding a support issue."
                    }
                  },
                  "required": ["type", "prompt"],
                  "description": "Prompt-based private handoff for warm transfer."
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "static_message",
                      "description": "Indicates a static message private handoff."
                    },
                    "message": {
                      "type": "string",
                      "description": "The static message for the warm transfer private handoff.",
                      "example": "Support call incoming."
                    }
                  },
                  "required": ["type", "message"],
                  "description": "Static message private handoff for warm transfer."
                }
              ],
              "description": "Private handoff options for warm transfer."
            },
            "agent_detection_timeout_ms": {
              "type": "number",
              "description": "Time in milliseconds to wait before considering the transfer failed.",
              "example": 5000,
              "minimum": 10000,
              "maximum": 300000
            },
            "on_hold_music": {
              "type": "string",
              "description": "Music to play while the caller is being transferred.",
              "enum": ["none", "ringtone", "relaxing_sound", "uplifting_beats"],
              "example": "none"
            },
            "opt_out_human_detection": {
              "type": "boolean",
              "description": "Whether to skip human detection for the transfer.",
              "example": false
            },
            "opt_out_initial_message": {
              "type": "boolean",
              "description": "Whether to skip the AI saying 'Hello' after connecting the call.",
              "example": false
            }
          },
          "required": [
            "type",
            "public_handoff_option",
            "private_handoff_option",
            "agent_detection_timeout_ms",
            "on_hold_music",
            "opt_out_human_detection",
            "opt_out_initial_message"
          ],
          "description": "Options for warm transfer."
        }
      ],
      "description": "Options for the call transfer type.",
      "nullable": true
    }
  },
  "required": [
    "type",
    "name",
    "description",
    "transfer_destination",
    "transfer_option"
  ]
},
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "book_appointment_cal",
              "description": "The tool type to book an appointment in the calendar."
            },
            "name": {
              "type": "string",
              "description": "The name of the tool.",
              "example": "Book_Calendar"
            },
            "description": {
              "type": "string",
              "description": "A description of what the tool does.",
              "example": "Book Calendar Availability"
            },
            "cal_api_key": {
              "type": "string",
              "description": "The Cal.com API key for accessing the calendar.",
              "example": "cal_api_1234567890"
            },
            "event_type_id": {
              "type": "integer",
              "description": "The ID of the event type to book in the calendar.",
              "example": 12345
            },
            "timezone": {
              "type": "string",
              "description": "The timezone for the appointment.",
              "example": "America/Los_Angeles"
            }
          },
          "required": ["type", "name", "description", "cal_api_key", "event_type_id", "timezone"],
          "description": "Configuration for booking an appointment in the calendar."
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "check_availability_cal",
              "description": "The tool type to check calendar availability."
            },
            "name": {
              "type": "string",
              "description": "The name of the tool.",
              "example": "check_availability"
            },
            "description": {
              "type": "string",
              "description": "A description of what the tool does.",
              "example": "Checks available time slots in the calendar."
            },
            "parameters": {
              "type": "object",
              "properties": {
                "cal_api_key": {
                  "type": "string",
                  "description": "The Cal.com API key for accessing the calendar.",
                  "example": "cal_api_1234567890"
                },
                "event_type_id": {
                  "type": "integer",
                  "description": "The ID of the event type to check for availability.",
                  "example": 12345
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "The date to check for availability.",
                  "example": "2025-08-15"
                },
                "timezone": {
                  "type": "string",
                  "description": "The timezone for the availability check.",
                  "example": "America/Los_Angeles"
                }
              },
              "required": ["cal_api_key", "event_type_id", "date", "timezone"],
              "description": "Parameters required for checking calendar availability."
            }
          },
          "required": ["type", "name", "description", "parameters"],
          "description": "Configuration for checking calendar availability."
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "press_digit",
              "description": "The tool type to press a digit during a call."
            },
            "name": {
              "type": "string",
              "description": "The name of the tool.",
              "example": "press_digit"
            },
            "description": {
              "type": "string",
              "description": "A description of what the tool does.",
              "example": "Simulates pressing a digit on the phone keypad."
            },
            "parameters": {
              "type": "object",
              "properties": {
                "digit": {
                  "type": "string",
                  "description": "The digit to press (0-9, *, #).",
                  "example": "1"
                }
              },
              "required": ["digit"],
              "description": "Parameters required for pressing a digit.",
              "nullable": true
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "agent_swap",
              "description": "The tool type to swap to another agent."
            },
            "name": {
              "type": "string",
              "description": "The name of the tool.",
              "example": "agent_transfer"
            },
            "description": {
              "type": "string",
              "description": "A description of what the tool does.",
              "example": "Swaps the current agent with another agent."
            },
            "agent_id": {
              "type": "string",
              "description": "The ID of the agent to swap to.",
              "example": "agent_456"
            },
            "execution_message_description": {
              "type": "string",
              "description": "The message to be spoken during the agent swap execution, if enabled.",
              "example": "Please hold while I transfer you to another agent.",
              "nullable": true
            },
            "post_call_analysis_setting": {
              "type": "string",
              "enum": ["both_agents", "only_destination_agent"],
              "description": "Determines which agents are included in post-call analysis.",
              "example": "both_agents"
            },
            "speak_during_execution": {
              "type": "boolean",
              "description": "Whether to speak the execution message during the agent swap.",
              "example": true
            }
          },
          "required": [
            "type",
            "name",
            "description",
            "agent_id",
            "post_call_analysis_setting",
            "speak_during_execution"
          ],
          "description": "Configuration for swapping to another agent."
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "extract_dynamic_variable",
              "description": "The tool type to swap to another agent."
            },
            "name": {
              "type": "string",
              "description": "Name of the tool. Must be unique within all tools available to LLM at any given time. Must be consisted of a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64 (no space allowed)."
            },
            "description": {
              "type": "string",
              "description": "Describes what the tool does, sometimes can also include information about when to call the tool."
                        },
                        "variables":{
                          "type": "array",
    "items": {
      "oneOf": [
        {
          "title":"string",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "string",
              "description": "The data type of the analysis field, set to string."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["sentiment", "key_topic", "action_item"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Sentiment of the call", "Key topic discussed", "Action item assigned"]
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Example values for the analysis field.",
              "nullable": true,
              "examples": [
                ["happy customer", "urgent issue"],
                ["pricing", "product feedback"],
                ["follow-up call", "send email"]
              ]
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "title":"enum",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "enum",
              "description": "The data type of the analysis field, set to enum."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["sentiment", "status", "priority"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Sentiment of the call", "Status of the call", "Priority level"]
            },
            "choices": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Possible values for the analysis field.",
              "nullable": true,
              "examples": [
                ["positive", "negative", "neutral"],
                ["successful", "unsuccessful", "pending"],
                ["high", "medium", "low"]
              ]
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "title":"boolean",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "boolean",
              "description": "The data type of the analysis field, set to boolean."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["is_urgent", "is_resolved"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Whether the issue is urgent", "Whether the issue is resolved"]
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "title":"number",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "number",
              "description": "The data type of the analysis field, set to number."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["call_duration", "customer_rating"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Duration of the call in minutes", "Customer satisfaction rating"]
            }
          },
          "required": ["type", "name", "description"]
        }
      ],
      "description": "Configuration for a single post-call analysis field."
    }
                        }
          },
          "required": [
            "type",
            "name",
            "description",
            "agent_id",
            "post_call_analysis_setting",
            "speak_during_execution"
          ],
          "description": "Configuration for swapping to another agent."
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "mcp"
            },
            "name": {
              "type": "string",
              "description": "Name of the MCP tool."
            },
            "description": {
              "type": "string",
              "description": "Description of the MCP tool."
                        },
            "mcp_id": {
              "type": "string",
              "description": "Unique id of the MCP."
                        },
          "input_schema": {
    "type": "object",
    "description": "The input schema of the MCP tool.",
    "properties": {
      "{key}": {
        "type": "string",
        "description": "Any property key under input_schema, represented as a string."
      }
    },
    "child_attributes_hidden": true
  }
          },
          "required": [
            "type",
            "name",
            "description",
            "agent_id",
            "post_call_analysis_setting",
            "speak_during_execution"
          ],
          "description": "Configuration for swapping to another agent."
        }
      ],
      "description": "Configuration for a single tool available to the model."
    },
    "description": "List of tools the model may call (e.g., end call, transfer call, or custom tools).",
    "nullable": true
  },
          "begin_message": {
            "type": "string",
            "nullable": true,
            "description": "First utterance said by the agent. If empty, agent waits for user to speak. If not set, LLM generates dynamically."
          }
        }
      },
      "UpdateLLMResponse": {
        "type": "object",
        "required": ["success", "message", "data", "prices"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request"
          },
          "data": {
            "type": "object",
            "required": [
              "pk",
              "model",
              "states",
              "s2s_model",
              "model_temperature",
              "general_prompt",
              "general_tools",
              "begin_message",
              "ghl_book_meeting",
              "price_set_per_model",
              "custom_message"
            ],
            "properties": {
              "pk": {
                "type": "integer",
                "description": "Primary key for the language model"
              },
              "model": {
                "type": "string",
                "description": "Name of the language model"
              },
              "states": {
                "type": "string",
                "nullable": true,
                "description": "State settings for the model"
              },
              "s2s_model": {
                "type": "string",
                "nullable": true,
                "description": "Speech-to-speech model identifier"
              },
              "model_temperature": {
                "type": "string",
                "description": "Temperature setting for the model"
              },
              "general_prompt": {
                "type": "string",
                "description": "General prompt for the model"
              },
              "general_tools": {
                "type": "array",
                "description": "List of tools available to the model",
                "items": {
                  "type": "object"
                }
              },
              "begin_message": {
                "type": "string",
                "description": "Initial message for the model"
              },
              "ghl_book_meeting": {
                "type": "boolean",
                "description": "Indicates if meeting booking is enabled"
              },
              "price_set_per_model": {
                "type": "string",
                "description": "Price set for the model"
              },
              "custom_message": {
                "type": "string",
                "nullable": true,
                "description": "Custom message for the model"
              }
            }
          },
          "prices": {
            "type": "object",
            "description": "Pricing details for available models",
            "properties": {
              "gpt-5": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-5 model"
              },
              "gpt-5-mini": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-5-mini model"
              },
              "gpt-5-nano": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-5-nano model"
              },
              "gpt-4o": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4o model"
              },
              "gpt-4.1": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4.1 model"
              },
              "gpt-4.1-mini": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4.1-mini model"
              },
              "gpt-4.1-nano": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4.1-nano model"
              },
              "gpt-4o-mini": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4o-mini model"
              },
              "gpt-4o-realtime": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4o-realtime model"
              },
              "gpt-4o-mini-realtime": {
                "type": "number",
                "format": "float",
                "description": "Price for gpt-4o-mini-realtime model"
              },
              "claude-4o-sonnet": {
                "type": "number",
                "format": "float",
                "description": "Price for claude-4o-sonnet model"
              },
              "claude-3.7-sonnet": {
                "type": "number",
                "format": "float",
                "description": "Price for claude-3.7-sonnet model"
              },
              "claude-3.5-haiku": {
                "type": "number",
                "format": "float",
                "description": "Price for claude-3.5-haiku model"
              },
              "gemini-2.0-flash": {
                "type": "number",
                "format": "float",
                "description": "Price for gemini-2.0-flash model"
              },
              "gemini-2.0-flash-lite": {
                "type": "number",
                "format": "float",
                "description": "Price for gemini-2.0-flash-lite model"
              },
              "gemini-2.5-flash": {
                "type": "number",
                "format": "float",
                "description": "Price for gemini-2.5-flash model"
              },
              "gemini-2.5-flash-lite": {
                "type": "number",
                "format": "float",
                "description": "Price for gemini-2.5-flash-lite model"
              }
            }
          }
        }
      },
      "UpdateAgentRequest": {
        "type": "object",
        "properties": {
          "agent_name": {
            "type": "string",
            "description": "The name of the agent, used for reference.",
            "nullable": true,
            "example": "Jarvis"
          },
          "voice_id": {
            "type": "string",
            "description": "Unique voice ID used for the agent.",
            "example": "11labs-Adrian"
          },
          "voice_temperature": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "Controls voice stability for ElevenLabs voices. Lower is more stable, higher is more variant. Defaults to 1.",
            "example": 1
          },
          "voice_speed": {
            "type": "number",
            "minimum": 0.5,
            "maximum": 2,
            "description": "Controls voice speed. Lower is slower, higher is faster. Defaults to 1.",
            "example": 1
          },
          "volume": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "Controls agent volume. Lower is quieter, higher is louder. Defaults to 1.",
            "example": 1
          },
          "responsiveness": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Controls agent responsiveness. Lower is slower, higher is faster. Defaults to 1.",
            "example": 1
          },
          "interruption_sensitivity": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Controls sensitivity to user interruptions. Lower is harder to interrupt, higher is easier. Defaults to 1.",
            "example": 1
          },
           "pronunciation_dictionary": {
            "type": "array",
            "description":"A list of words / phrases and their pronunciation to be used to guide the audio synthesize for consistent pronunciation. Currently only supported for English & 11labs voices. Set to null to remove pronunciation dictionary from this agent.",
            "items": {
              "type": "object",
              "properties":{
                "word":{
                  "type":"string",
                  "description":"The string of word / phrase to be annotated with pronunciation.",
                  "example":"actually"
                },
                "alphabet":{
                  "type":"string",
                  "description":"The phonetic alphabet to be used for pronunciation.",
                  "enum":["cmu","ipa"]

                },
                "phoneme":{
                  "type":"string",
                  "description":"Pronunciation of the word in the format of a IPA / CMU pronunciation.",
                  "example":"ˈæktʃuəli"
                }
              }
            },
            "nullable": true
          },
          "enable_backchannel": {
            "type": "boolean",
            "description": "Enables backchannel responses (e.g., 'yeah', 'uh-huh'). Defaults to false.",
            "example": true
          },
          "backchannel_frequency": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Controls backchannel frequency when enabled. Lower is less frequent, higher is more frequent. Defaults to 0.8.",
            "example": 0.9
          },
          "backchannel_words": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of backchannel words. Defaults apply if not set.",
            "nullable": true,
            "example": ["yeah", "uh-huh"]
          },
          "vocab_specialization": {
            "type": "string",
            "enum": ["general", "medical"],
            "description": "Vocabulary set for transcription (English only). Defaults to general.",
            "example": "general"
          },
          "allow_user_dtmf": {
            "type": "boolean",
            "description": "If set to true, DTMF input will be accepted and processed. If false, any DTMF input will be ignored. Default to true.",
            "example": true
          },
          "user_dtmf_options": {
            "type": "object",
            "description": "DTMF options for the agent.",
            "properties":{
              "digit_limit":{
                "type":"number",
                "description":"The maximum number of digits allowed in the user's DTMF (Dual-Tone Multi-Frequency) input per turn. Once this limit is reached, the input is considered complete and a response will be generated immediately."
              },
              "timeout_ms":{
                "type":"number",
                "description":"The time (in milliseconds) to wait for user DTMF input before timing out. The timer resets with each digit received."
              },
              "termination_key":{
                "type":"string",
                "description":"A single key that signals the end of DTMF input. Acceptable values include any digit (0–9), the pound/hash symbol (#), or the asterisk (*)."
              }
            },
            "nullable": true
          },
          "denoising_mode": {
            "type": "string",
            "enum": ["noise-cancellation", "noise-and-background-speech-cancellation"],
            "description": "Denoising mode for audio. Defaults to noise-cancellation.",
            "example": "noise-cancellation"
          },
          "reminder_trigger_ms": {
            "type": "number",
            "minimum": 0,
            "description": "Triggers reminder after user silence duration (ms). Defaults to 10000.",
            "example": 10000
          },
          "reminder_max_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Maximum number of reminders for unresponsive user. Defaults to 1.",
            "example": 2
          },
          "ambient_sound": {
            "type": "string",
            "enum": [
              "coffee-shop",
              "convention-hall",
              "summer-outdoor",
              "mountain-outdoor",
              "static-noise",
              "call-center"
            ],
            "description": "Ambient sound for realistic call experience. Set to null to remove.",
            "nullable": true
          },
          "ambient_sound_volume": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "Controls ambient sound volume. Lower is quieter, higher is louder. Defaults to 1.",
            "example": 1
          },
          "language": {
            "type": "string",
            "enum": [
              "en-US",
              "en-IN",
              "en-GB",
              "en-AU",
              "en-NZ",
              "de-DE",
              "es-ES",
              "es-419",
              "hi-IN",
              "fr-FR",
              "fr-CA",
              "ja-JP",
              "pt-PT",
              "pt-BR",
              "zh-CN",
              "ru-RU",
              "it-IT",
              "ko-KR",
              "nl-NL",
              "nl-BE",
              "pl-PL",
              "tr-TR",
              "th-TH",
              "vi-VN",
              "ro-RO",
              "bg-BG",
              "ca-ES",
              "da-DK",
              "fi-FI",
              "el-GR",
              "hu-HU",
              "id-ID",
              "no-NO",
              "sk-SK",
              "sv-SE",
              "multi"
            ],
            "description": "Language and dialect for speech recognition. Defaults to en-US.",
            "example": "en-US"
          },
          
          "boosted_keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keywords to bias transcriber model. Set to null to remove.",
            "nullable": true,
            "example": ["aicall", "kroger"]
          },
          
          
          "normalize_for_speech": {
            "type": "boolean",
            "description": "Normalizes text to spoken form for consistent synthesis.",
            "example": true
          },
          "end_call_after_silence_ms": {
            "type": "integer",
            "minimum": 10000,
            "description": "Ends call after user silence duration (ms). Defaults to 600000.",
            "example": 600000
          },
          "max_call_duration_ms": {
            "type": "integer",
            "minimum": 60000,
            "maximum": 7200000,
            "description": "Maximum call duration (ms). Defaults to 3600000.",
            "example": 3600000
          },
          "voicemail_option": {
            "type": "object",
            "description": "Voicemail detection settings. Set to null to disable.",
            "nullable": true,
            "properties": {
              "action": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of voicemail action (e.g., static_text, hangup)",
                    "example": "static_text"
                  },
                  "text": {
                    "type": "string",
                    "description": "Text for voicemail prompt, if applicable",
                    "example": "Please give us a callback tomorrow at 10am."
                  }
                }
              }
            }
          },
        
  "analysis_data": {
    "type": "array",
    "items": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "string",
              "description": "The data type of the analysis field, set to string."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["sentiment", "key_topic", "action_item"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Sentiment of the call", "Key topic discussed", "Action item assigned"]
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Example values for the analysis field.",
              "nullable": true,
              "examples": [
                ["happy customer", "urgent issue"],
                ["pricing", "product feedback"],
                ["follow-up call", "send email"]
              ]
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "enum",
              "description": "The data type of the analysis field, set to enum."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["sentiment", "status", "priority"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Sentiment of the call", "Status of the call", "Priority level"]
            },
            "choices": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Possible values for the analysis field.",
              "nullable": true,
              "examples": [
                ["positive", "negative", "neutral"],
                ["successful", "unsuccessful", "pending"],
                ["high", "medium", "low"]
              ]
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "boolean",
              "description": "The data type of the analysis field, set to boolean."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["is_urgent", "is_resolved"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Whether the issue is urgent", "Whether the issue is resolved"]
            }
          },
          "required": ["type", "name", "description"]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "number",
              "description": "The data type of the analysis field, set to number."
            },
            "name": {
              "type": "string",
              "description": "The name of the analysis field.",
              "examples": ["call_duration", "customer_rating"]
            },
            "description": {
              "type": "string",
              "description": "A description of what the analysis field represents.",
              "examples": ["Duration of the call in minutes", "Customer satisfaction rating"]
            }
          },
          "required": ["type", "name", "description"]
        }
      ],
      "description": "Configuration for a single post-call analysis field."
    },
    "description": "Additional data to extract post-call. Available after call ends.",
    "nullable": true
  },
          "ring_duration_ms": {
            "type": "integer",
            "minimum": 5000,
            "maximum": 90000,
            "description": "Ring duration for calls (ms). Defaults to 30000.",
            "example": 30000
          }
        }
      },
      "UpdateAgentResponse": {
        "type": "object",
        "required": ["success", "message", "data", "voice_list", "ghl_data"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message describing the result of the request",
            "example": "get agent detail"
          },
          "data": {
            "type": "object",
            "required": [
              "pk",
              "agent_name",
              "agent_id",
              "voice_id",
              "language",
              "interruption_sensitivity",
              "voicemail",
              "voicemail_message",
              "end_call_after_silence",
              "max_call_duration",
              "reminder_trigger",
              "ambient_sound",
              "analysis_data",
              "llm",
              "voice_speed",
              "voice_temperature",
              "volume",
              "enable_backchannel",
              "normalize_for_speech",
              "enable_transcription_formatting",
              "reminder_trigger_ms",
              "reminder_max_count",
              "boosted_keywords",
              "ambient_sound_volume",
              "voicemail_detection_timeout_ms",
              "begin_message_delay_ms",
              "updated_at",
              "is_locked",
              "calendar_id",
              "inbound_appoitment",
              "ring_duration_sec",
              "stt_mode",
              "backchannel_words",
              "backchannel_frequency",
              "call_scheduling",
              "agent_crm_type",
              "voicemail_option"
            ],
            "properties": {
              "pk": {
                "type": "integer",
                "description": "Primary key for the AI call agent",
                "example": 521
              },
              "agent_name": {
                "type": "string",
                "description": "Name of the AI call agent",
                "example": "add_agent_name"
              },
              "agent_id": {
                "type": "string",
                "description": "Unique identifier for the AI call agent",
                "example": "agent_aa2c4c2895abe6ab7c0e89b607"
              },
              "voice_id": {
                "type": "string",
                "description": "Identifier for the voice used by the agent",
                "example": "11labs-Marissa"
              },
              "language": {
                "type": "string",
                "description": "Language code or type (e.g., en-US, multi)",
                "example": "en-US"
              },
              "interruption_sensitivity": {
                "type": "string",
                "description": "Sensitivity level for interruptions",
                "example": "1.0"
              },
              "pronunciation_dictionary": {
            "type": "array",
            "items": {
              "type": "object",
              "properties":{
                "word":{
                  "type":"string",
                  "description":"",
                  "example":"hello"
                },
                "alphabet":{
                  "type":"string",
                  "description":"",
                  "enum":["CMU","IPA"]

                },
                "phoneme":{
                  "type":"string",
                  "description":""
                }
              }
            },
            "description": "List of words/phrases with pronunciations for consistent synthesis. Set to null to remove.",
            "nullable": true
          },
           "vocab_specialization": {
            "type": "string",
            "enum": ["general", "medical"],
            "description": "Vocabulary set for transcription (English only). Defaults to general.",
            "example": "general"
          },
          "allow_user_dtmf": {
            "type": "boolean",
            "description": "If set to true, DTMF input will be accepted and processed. If false, any DTMF input will be ignored. Default to true.",
            "example": true
          },
          "user_dtmf_options": {
            "type": "object",
            "description": "DTMF options for the agent.",
            "properties":{
              "digit_limit":{
                "type":"number",
                "description":"The maximum number of digits allowed in the user's DTMF (Dual-Tone Multi-Frequency) input per turn. Once this limit is reached, the input is considered complete and a response will be generated immediately."
              },
              "timeout_ms":{
                "type":"number",
                "description":"The time (in milliseconds) to wait for user DTMF input before timing out. The timer resets with each digit received."
              },
              "termination_key":{
                "type":"string",
                "description":"A single key that signals the end of DTMF input. Acceptable values include any digit (0–9), the pound/hash symbol (#), or the asterisk (*)."
              }
            },
            "nullable": true
          },
          "denoising_mode": {
            "type": "string",
            "enum": ["noise-cancellation", "noise-and-background-speech-cancellation"],
            "description": "Denoising mode for audio. Defaults to noise-cancellation.",
            "example": "noise-cancellation"
          },
              "voicemail": {
                "type": "boolean",
                "description": "Indicates if voicemail is enabled",
                "example": true
              },
              "voicemail_message": {
                "type": "string",
                "description": "Voicemail message content",
                "nullable": true,
                "example": null
              },
              "end_call_after_silence": {
                "type": "integer",
                "description": "Duration of silence before ending the call (in seconds)",
                "example": 10
              },
              "max_call_duration": {
                "type": "integer",
                "description": "Maximum call duration (in minutes)",
                "example": 10
              },
              "reminder_trigger": {
                "type": "integer",
                "description": "Time before triggering a reminder (in seconds)",
                "example": 10
              },
              "ambient_sound": {
                "type": "string",
                "description": "Ambient sound setting",
                "nullable": true,
                "example": null
              },
              "analysis_data": {
                "type": "array",
                "description": "Data for call analysis",
                "items": {
                  "type": "string"
                },
                "example": []
              },
              "llm": {
                "type": "integer",
                "description": "Identifier for the language model used",
                "example": 527
              },
              "voice_speed": {
                "type": "number",
                "format": "float",
                "description": "Speed of the voice",
                "example": 1.0
              },
              "voice_temperature": {
                "type": "number",
                "format": "float",
                "description": "Temperature setting for voice generation",
                "example": 1.0
              },
              "volume": {
                "type": "number",
                "format": "float",
                "description": "Volume level for the voice",
                "example": 1.0
              },
              "enable_backchannel": {
                "type": "boolean",
                "description": "Indicates if backchannel responses are enabled",
                "example": true
              },
              "normalize_for_speech": {
                "type": "boolean",
                "description": "Indicates if speech normalization is enabled",
                "example": false
              },
              "enable_transcription_formatting": {
                "type": "boolean",
                "description": "Indicates if transcription formatting is enabled",
                "example": true
              },
              "reminder_trigger_ms": {
                "type": "integer",
                "description": "Reminder trigger time in milliseconds",
                "example": 10000
              },
              "reminder_max_count": {
                "type": "integer",
                "description": "Maximum number of reminders",
                "example": 1
              },
              "boosted_keywords": {
                "type": "array",
                "description": "List of keywords to boost in processing",
                "items": {
                  "type": "string"
                },
                "example": []
              },
              "ambient_sound_volume": {
                "type": "number",
                "format": "float",
                "description": "Volume level for ambient sound",
                "example": 1.0
              },
              "voicemail_detection_timeout_ms": {
                "type": "integer",
                "description": "Timeout for voicemail detection in milliseconds",
                "example": 5000
              },
              "begin_message_delay_ms": {
                "type": "integer",
                "description": "Delay before starting message in milliseconds",
                "example": 0
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the agent was last updated",
                "example": "2025-08-13T09:41:44.564571Z"
              },
              "is_locked": {
                "type": "boolean",
                "description": "Indicates if the agent is locked",
                "example": false
              },
              "calendar_id": {
                "type": "string",
                "description": "Identifier for associated calendar",
                "nullable": true,
                "example": null
              },
              "inbound_appoitment": {
                "type": "boolean",
                "description": "Indicates if inbound appointment scheduling is enabled",
                "example": false
              },
              "ring_duration_sec": {
                "type": "integer",
                "description": "Ring duration in seconds",
                "example": 30
              },
              "stt_mode": {
                "type": "string",
                "description": "Speech-to-text mode (e.g., fast)",
                "example": "fast"
              },
              "backchannel_words": {
                "type": "string",
                "description": "Words used for backchannel responses",
                "nullable": true,
                "example": null
              },
              "backchannel_frequency": {
                "type": "number",
                "format": "float",
                "description": "Frequency of backchannel responses",
                "example": 0.8
              },
              "call_scheduling": {
                "type": "boolean",
                "description": "Indicates if call scheduling is enabled",
                "example": false
              },
              "agent_crm_type": {
                "type": "string",
                "description": "Type of CRM integration for the agent",
                "nullable": true,
                "example": null
              },
              "voicemail_option": {
                "type": "object",
                "description": "Voicemail options for the agent",
                "properties": {
                  "action": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of voicemail action (e.g., hangup)",
                        "example": "hangup"
                      }
                    }
                  }
                }
              }
            }
          },
          "voice_list": {
            "type": "array",
            "description": "List of available voices for the agent",
            "items": {
              "type": "object",
              "required": ["id", "voice_name", "voice_id", "avatar_url", "preview_audio_url", "created_at", "updated_at"],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the voice",
                  "example": 3
                },
                "voice_name": {
                  "type": "string",
                  "description": "Name of the voice",
                  "example": "aicall_ryan"
                },
                "voice_id": {
                  "type": "string",
                  "description": "Unique identifier for the voice",
                  "example": "custom_voice_937c75901acb54b42837d3dafa"
                },
                "preview_audio_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to the voice's preview audio",
                  "example": "https://aicall-utils-public.s3.us-west-2.amazonaws.com/custom_voice_937c75901acb54b42837d3dafa.mp3"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the voice was created",
                  "example": "2025-08-01T16:31:51.688674Z"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the voice was last updated",
                  "example": "2025-08-01T16:31:51.688683Z"
                }
              }
            }
          },
          "ghl_data": {
            "type": "object",
            "required": ["ghl_connection", "ghl_book_meeting", "inbound_appoitment", "calendar_id"],
            "properties": {
              "ghl_connection": {
                "type": "boolean",
                "description": "Indicates if GoHighLevel is connected",
                "example": true
              },
              "ghl_book_meeting": {
                "type": "boolean",
                "description": "Indicates if meeting booking is enabled",
                "example": true
              },
              "inbound_appoitment": {
                "type": "boolean",
                "description": "Indicates if inbound appointment scheduling is enabled",
                "example": false
              },
              "calendar_id": {
                "type": "string",
                "description": "Identifier for associated calendar",
                "nullable": true,
                "example": null
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}